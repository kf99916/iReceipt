{"version":3,"file":"ireceipt.js","sources":["../../src/js/tax-type.js","../../src/js/receipt-info.js","../../src/js/item.js","../../src/js/amount.js","../../src/js/common/utils.js","../../src/js/encode-type.js","../../src/js/receipt.js"],"sourcesContent":["export default {\n    TAX: 1,\n    ZERO_TAX: 2,\n    FREE_TAX: 3,\n    SPECIAL_TAX: 4,\n    COMPOUND_TAX: 9\n};\n","import { format } from 'date-fns/esm';\n\nclass ReceiptInfo {\n    constructor(\n        number,\n        date,\n        seller,\n        buyer,\n        type = '07',\n        carrier,\n        donationID,\n        orderno\n    ) {\n        this.number = number;\n        this.date = date;\n        this.seller = seller;\n        this.buyer = buyer;\n        this.type = type;\n        this.carrier = carrier;\n        this.donationID = donationID;\n        this.orderno = orderno;\n        this.randomNumber = Math.floor(1000 + Math.random() * 9000);\n    }\n\n    toXMLObject() {\n        let xmlObject = {\n            InvoiceNumber: this.number,\n            InvoiceDate: format(this.date, 'YYYYMMDD'),\n            InvoiceTime: format(this.date, 'hh:mm:ss'),\n            Seller: {\n                Identifier: this.seller.id,\n                Name: this.seller.name\n            },\n            Buyer: {\n                Identifier: this.buyer.id || '0000000000',\n                Name: this.buyer.name\n            },\n            InvoiceType: this.type,\n            DonateMark: 0,\n            PrintMark: this.carrier ? 'N' : 'Y',\n            RandomNumber: this.randomNumber\n        };\n\n        if (this.donationID) {\n            xmlObject.DonateMark = 1;\n            xmlObject.NPOBAN = this.donationID;\n        }\n\n        if (this.carrier) {\n            xmlObject.CarrierType = this.carrier.type;\n            xmlObject.CarrierId1 = this.carrier.id;\n            xmlObject.CarrierId2 = this.carrier.id;\n        }\n\n        return xmlObject;\n    }\n}\n\nexport default ReceiptInfo;\n","import TaxType from './tax-type';\n\nclass Item {\n    constructor(\n        description,\n        unitPrice,\n        sequenceNumber,\n        quantity = 1,\n        taxType = TaxType.TAX\n    ) {\n        this.description = description;\n        this.unitPrice = parseInt(unitPrice);\n        this.sequenceNumber = sequenceNumber;\n        this.quantity = parseInt(quantity);\n        this.taxType = taxType;\n    }\n\n    toXMLObject() {\n        return {\n            ProductItem: {\n                Description: this.description,\n                Quantity: this.quantity,\n                UnitPrice: this.unitPrice,\n                Amount: this.amount,\n                SequenceNumber: this.sequenceNumber\n            }\n        };\n    }\n\n    get amount() {\n        return this.unitPrice * this.quantity;\n    }\n}\n\nexport default Item;\n","import TaxType from './tax-type';\n\nclass Amount {\n    constructor(taxItems, freeTaxItems, zeroTaxItems) {\n        const taxRate = 0.05;\n        this.salesAmount = Math.round(\n            taxItems.reduce(\n                (amount, item) => (amount + item.amount) / (1 + taxRate),\n                0\n            )\n        );\n        this.freeTaxSalesAmount = Math.round(\n            freeTaxItems.reduce((amount, item) => amount + item.amount, 0)\n        );\n        this.zeroTaxSalesAmount = Math.round(\n            zeroTaxItems.reduce((amount, item) => amount + item.amount, 0)\n        );\n\n        const hasTax = this.salesAmount !== 0,\n            hasFreeTax = this.freeTaxSalesAmount !== 0,\n            hasZeroTax = this.zeroTaxSalesAmount !== 0;\n\n        this.taxType = TaxType.SPECIAL_TAX;\n        if (\n            (hasTax && hasFreeTax) ||\n            (hasTax && hasZeroTax) ||\n            (hasFreeTax && hasZeroTax)\n        ) {\n            this.taxType = TaxType.COMPOUND_TAX;\n        } else if (hasTax) {\n            this.taxType = TaxType.TAX;\n        } else if (hasFreeTax) {\n            this.taxType = TaxType.FREE_TAX;\n        } else if (hasZeroTax) {\n            this.taxType = TaxType.ZERO_TAX;\n        }\n        this.taxRate =\n            this.taxType === TaxType.FREE_TAX ||\n            this.taxType === TaxType.ZERO_TAX\n                ? 0\n                : taxRate;\n        this.taxAmount = Math.round(this.salesAmount * this.taxRate);\n        this.totalAmount =\n            this.salesAmount +\n            this.freeTaxSalesAmount +\n            this.zeroTaxSalesAmount +\n            this.taxAmount;\n    }\n\n    toXMLObject() {\n        return {\n            SalesAmount: this.salesAmount,\n            FreeTaxSalesAmount: this.freeTaxSalesAmount,\n            ZeroTaxSalesAmount: this.zeroTaxSalesAmount,\n            TaxType: this.taxType,\n            TaxRate: this.taxRate,\n            TaxAmount: this.taxAmount,\n            TotalAmount: this.totalAmount\n        };\n    }\n}\n\nexport default Amount;\n","export default {\n    padZero: function(number, size) {\n        return ('000000000' + number).substr(-size);\n    }\n};\n","export default {\n    BIG5: 0,\n    UTF8: 1,\n    BASE64: 3\n};\n","import xml2js from 'xml2js';\nimport TaxType from './tax-type';\nimport ReceiptInfo from './receipt-info';\nimport Item from './item';\nimport Amount from './amount';\nimport utils from './common/utils';\nimport EncodeType from './encode-type';\n\nconst defaultInvoiceAttr = {\n    xmlns: 'urn:GEINV:eInvoiceMessage:C0401:3.1',\n    'xmlns:xsi': 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation': 'urn:GEINV:eInvoiceMessage:C0401:3.1 C0401.xsd'\n};\n\nclass Receipt {\n    constructor(info, items) {\n        if (!(info instanceof ReceiptInfo)) {\n            throw new TypeError('Info is not ReceiptInfo class!');\n        }\n        const invalidItems = items.filter(item => {\n            return !(item instanceof Item);\n        });\n        if (invalidItems.length > 0) {\n            throw new TypeError('Some items are not Item class!');\n        }\n\n        this.info = info;\n        this.items = items;\n        this.amount = new Amount(\n            this.taxItems,\n            this.freeTaxItems,\n            this.zeroTaxItems\n        );\n    }\n\n    // Static Methods\n    // The format of the list of winners:\n    // 53925591  10510LC60123189...\n    // 53925591  10510LC60122037...\n    // The range of receipt number is the 15th position and 10 characters\n    static parseWinnersList(winnersList) {\n        return winnersList.split(/\\n|\\r\\n?/).map(winner => {\n            return winner.substr(15, 10);\n        });\n    }\n\n    // Getters\n    get taxItems() {\n        return this.items.filter(item => {\n            return item.taxType === TaxType.TAX;\n        });\n    }\n\n    get freeTaxItems() {\n        return this.items.filter(item => {\n            return item.taxType === TaxType.FREE_TAX;\n        });\n    }\n\n    get zeroTaxItems() {\n        return this.items.filter(item => {\n            return item.taxType === TaxType.ZERO_TAX;\n        });\n    }\n\n    get chineseYear() {\n        return this.info.date.getFullYear() - 1911;\n    }\n\n    get winningMonths() {\n        let month = this.info.date.getMonth() + 1;\n        return month % 2 === 0 ? [month - 1, month] : [month, month + 1];\n    }\n\n    get totalQuantity() {\n        return this.items.reduce((sum, item) => {\n            return sum + item.quantity;\n        }, 0);\n    }\n\n    // Methods\n    // Reference: https://www.einvoice.nat.gov.tw/home/DownLoad?fileName=1447235507091_0.zip\n    toXML() {\n        let receiptObject = {\n            $: defaultInvoiceAttr,\n            Main: this.info.toXMLObject(),\n            Details: this.items.map(item => {\n                return item.toXMLObject();\n            }),\n            Amounts: this.amount.toXMLObject()\n        };\n\n        const builder = new xml2js.Builder({\n            rootName: 'Invoice'\n        });\n        return builder.buildObject(receiptObject);\n    }\n\n    isWinning(winningNumbers) {\n        return winningNumbers.indexOf(this.info.number) !== -1;\n    }\n\n    // Reference: https://www.einvoice.nat.gov.tw/home/DownLoad?fileName=1479449792874_0.6(20161115).pdf\n    generateBarCodeString() {\n        return (\n            this.chineseYear +\n            utils.padZero(this.winningMonths[1], 2) +\n            this.info.number +\n            this.info.randomNumber\n        );\n    }\n\n    // Reference: https://www.einvoice.nat.gov.tw/home/DownLoad?fileName=1479449792874_0.6(20161115).pdf\n    generateRightQRCodeString() {\n        let qrcode = this.items.map((item, index) => {\n            let combineString = [];\n            combineString.push(index === 0 ? '**' : ':');\n            combineString.push(item.description.replace(':', '-'));\n            combineString.push(':' + item.quantity);\n            combineString.push(':' + item.unitPrice);\n            return combineString.join('');\n        });\n\n        return qrcode.join('');\n    }\n\n    generateLeftQRCodeString(\n        info = '**********',\n        encodeType = EncodeType.UTF8\n    ) {\n        let qrcode = [],\n            dateString =\n                this.chineseYear +\n                utils.padZero(this.info.date.getMonth() + 1, 2) +\n                utils.padZero(this.info.date.getDate(), 2),\n            salesAmountHex16 = utils.padZero(\n                this.amount.salesAmount.toString(16).toUpperCase(),\n                8\n            ),\n            totalAmountHex16 = utils.padZero(\n                this.amount.totalAmount.toString(16).toUpperCase(),\n                8\n            );\n\n        qrcode.push(this.info.number);\n        qrcode.push(dateString);\n        qrcode.push(this.info.randomNumber);\n        qrcode.push(salesAmountHex16);\n        qrcode.push(totalAmountHex16);\n        qrcode.push(this.info.buyer.id || '00000000');\n        qrcode.push(this.info.seller.id);\n        qrcode.push(this.info.number + this.info.randomNumber);\n        qrcode.push(':' + info);\n        qrcode.push(':' + this.items.length);\n        qrcode.push(':' + this.totalQuantity);\n        qrcode.push(':' + encodeType);\n\n        return qrcode.join('');\n    }\n}\n\nexport default {\n    Receipt: Receipt,\n    ReceiptInfo: ReceiptInfo,\n    Item: Item,\n    Amount: Amount,\n    TaxType: TaxType,\n    EncodeType: EncodeType\n};\n"],"names":["ReceiptInfo","number","date","seller","buyer","type","carrier","donationID","orderno","randomNumber","Math","floor","random","xmlObject","format","id","name","DonateMark","NPOBAN","CarrierType","CarrierId1","CarrierId2","Item","description","unitPrice","sequenceNumber","quantity","taxType","TaxType","TAX","parseInt","amount","Amount","taxItems","freeTaxItems","zeroTaxItems","taxRate","salesAmount","round","reduce","item","freeTaxSalesAmount","zeroTaxSalesAmount","hasTax","hasFreeTax","hasZeroTax","SPECIAL_TAX","COMPOUND_TAX","FREE_TAX","ZERO_TAX","taxAmount","totalAmount","size","substr","defaultInvoiceAttr","Receipt","info","items","TypeError","invalidItems","filter","length","receiptObject","toXMLObject","map","builder","xml2js","Builder","buildObject","winningNumbers","indexOf","chineseYear","utils","padZero","winningMonths","qrcode","index","combineString","push","replace","join","encodeType","EncodeType","UTF8","dateString","getMonth","getDate","salesAmountHex16","toString","toUpperCase","totalAmountHex16","totalQuantity","getFullYear","month","sum","winnersList","split","winner"],"mappings":";;;;;;;;;;;;;AAAA,cAAe;SACN,CADM;cAED,CAFC;cAGD,CAHC;iBAIE,CAJF;kBAKG;CALlB;;;;;;;;;;;;;;;;;;;;;;;;;;ICEMA;yBAEEC,MADJ,EAEIC,IAFJ,EAGIC,MAHJ,EAIIC,KAJJ,EASE;YAJEC,IAIF,uEAJS,IAIT;YAHEC,OAGF;YAFEC,UAEF;YADEC,OACF;;;aACOP,MAAL,GAAcA,MAAd;aACKC,IAAL,GAAYA,IAAZ;aACKC,MAAL,GAAcA,MAAd;aACKC,KAAL,GAAaA,KAAb;aACKC,IAAL,GAAYA,IAAZ;aACKC,OAAL,GAAeA,OAAf;aACKC,UAAL,GAAkBA,UAAlB;aACKC,OAAL,GAAeA,OAAf;aACKC,YAAL,GAAoBC,KAAKC,KAAL,CAAW,OAAOD,KAAKE,MAAL,KAAgB,IAAlC,CAApB;;;;;sCAGU;gBACNC,YAAY;+BACG,KAAKZ,MADR;6BAECa,WAAO,KAAKZ,IAAZ,EAAkB,UAAlB,CAFD;6BAGCY,WAAO,KAAKZ,IAAZ,EAAkB,UAAlB,CAHD;wBAIJ;gCACQ,KAAKC,MAAL,CAAYY,EADpB;0BAEE,KAAKZ,MAAL,CAAYa;iBANV;uBAQL;gCACS,KAAKZ,KAAL,CAAWW,EAAX,IAAiB,YAD1B;0BAEG,KAAKX,KAAL,CAAWY;iBAVT;6BAYC,KAAKX,IAZN;4BAaA,CAbA;2BAcD,KAAKC,OAAL,GAAe,GAAf,GAAqB,GAdpB;8BAeE,KAAKG;aAfvB;;gBAkBI,KAAKF,UAAT,EAAqB;0BACPU,UAAV,GAAuB,CAAvB;0BACUC,MAAV,GAAmB,KAAKX,UAAxB;;;gBAGA,KAAKD,OAAT,EAAkB;0BACJa,WAAV,GAAwB,KAAKb,OAAL,CAAaD,IAArC;0BACUe,UAAV,GAAuB,KAAKd,OAAL,CAAaS,EAApC;0BACUM,UAAV,GAAuB,KAAKf,OAAL,CAAaS,EAApC;;;mBAGGF,SAAP;;;;;;ICpDFS;kBAEEC,WADJ,EAEIC,SAFJ,EAGIC,cAHJ,EAME;YAFEC,QAEF,uEAFa,CAEb;YADEC,OACF,uEADYC,QAAQC,GACpB;;;aACON,WAAL,GAAmBA,WAAnB;aACKC,SAAL,GAAiBM,SAASN,SAAT,CAAjB;aACKC,cAAL,GAAsBA,cAAtB;aACKC,QAAL,GAAgBI,SAASJ,QAAT,CAAhB;aACKC,OAAL,GAAeA,OAAf;;;;;sCAGU;mBACH;6BACU;iCACI,KAAKJ,WADT;8BAEC,KAAKG,QAFN;+BAGE,KAAKF,SAHP;4BAID,KAAKO,MAJJ;oCAKO,KAAKN;;aAN7B;;;;+BAWS;mBACF,KAAKD,SAAL,GAAiB,KAAKE,QAA7B;;;;;;IC5BFM;oBACUC,QAAZ,EAAsBC,YAAtB,EAAoCC,YAApC,EAAkD;;;YACxCC,UAAU,IAAhB;aACKC,WAAL,GAAmB3B,KAAK4B,KAAL,CACfL,SAASM,MAAT,CACI,UAACR,MAAD,EAASS,IAAT;mBAAkB,CAACT,SAASS,KAAKT,MAAf,KAA0B,IAAIK,OAA9B,CAAlB;SADJ,EAEI,CAFJ,CADe,CAAnB;aAMKK,kBAAL,GAA0B/B,KAAK4B,KAAL,CACtBJ,aAAaK,MAAb,CAAoB,UAACR,MAAD,EAASS,IAAT;mBAAkBT,SAASS,KAAKT,MAAhC;SAApB,EAA4D,CAA5D,CADsB,CAA1B;aAGKW,kBAAL,GAA0BhC,KAAK4B,KAAL,CACtBH,aAAaI,MAAb,CAAoB,UAACR,MAAD,EAASS,IAAT;mBAAkBT,SAASS,KAAKT,MAAhC;SAApB,EAA4D,CAA5D,CADsB,CAA1B;;YAIMY,SAAS,KAAKN,WAAL,KAAqB,CAApC;YACIO,aAAa,KAAKH,kBAAL,KAA4B,CAD7C;YAEII,aAAa,KAAKH,kBAAL,KAA4B,CAF7C;;aAIKf,OAAL,GAAeC,QAAQkB,WAAvB;YAEKH,UAAUC,UAAX,IACCD,UAAUE,UADX,IAECD,cAAcC,UAHnB,EAIE;iBACOlB,OAAL,GAAeC,QAAQmB,YAAvB;SALJ,MAMO,IAAIJ,MAAJ,EAAY;iBACVhB,OAAL,GAAeC,QAAQC,GAAvB;SADG,MAEA,IAAIe,UAAJ,EAAgB;iBACdjB,OAAL,GAAeC,QAAQoB,QAAvB;SADG,MAEA,IAAIH,UAAJ,EAAgB;iBACdlB,OAAL,GAAeC,QAAQqB,QAAvB;;aAECb,OAAL,GACI,KAAKT,OAAL,KAAiBC,QAAQoB,QAAzB,IACA,KAAKrB,OAAL,KAAiBC,QAAQqB,QADzB,GAEM,CAFN,GAGMb,OAJV;aAKKc,SAAL,GAAiBxC,KAAK4B,KAAL,CAAW,KAAKD,WAAL,GAAmB,KAAKD,OAAnC,CAAjB;aACKe,WAAL,GACI,KAAKd,WAAL,GACA,KAAKI,kBADL,GAEA,KAAKC,kBAFL,GAGA,KAAKQ,SAJT;;;;;sCAOU;mBACH;6BACU,KAAKb,WADf;oCAEiB,KAAKI,kBAFtB;oCAGiB,KAAKC,kBAHtB;yBAIM,KAAKf,OAJX;yBAKM,KAAKS,OALX;2BAMQ,KAAKc,SANb;6BAOU,KAAKC;aAPtB;;;;;;AClDR,YAAe;aACF,iBAASlD,MAAT,EAAiBmD,IAAjB,EAAuB;eACrB,CAAC,cAAcnD,MAAf,EAAuBoD,MAAvB,CAA8B,CAACD,IAA/B,CAAP;;CAFR;;ACAA,iBAAe;UACL,CADK;UAEL,CAFK;YAGH;CAHZ;;ACQA,IAAME,qBAAqB;WAChB,qCADgB;iBAEV,2CAFU;0BAGD;CAH1B;;IAMMC;qBACUC,IAAZ,EAAkBC,KAAlB,EAAyB;;;YACjB,EAAED,gBAAgBxD,WAAlB,CAAJ,EAAoC;kBAC1B,IAAI0D,SAAJ,CAAc,gCAAd,CAAN;;YAEEC,eAAeF,MAAMG,MAAN,CAAa,gBAAQ;mBAC/B,EAAEpB,gBAAgBlB,IAAlB,CAAP;SADiB,CAArB;YAGIqC,aAAaE,MAAb,GAAsB,CAA1B,EAA6B;kBACnB,IAAIH,SAAJ,CAAc,gCAAd,CAAN;;;aAGCF,IAAL,GAAYA,IAAZ;aACKC,KAAL,GAAaA,KAAb;aACK1B,MAAL,GAAc,IAAIC,MAAJ,CACV,KAAKC,QADK,EAEV,KAAKC,YAFK,EAGV,KAAKC,YAHK,CAAd;;;;;;;;;;;;;;;;gCAsDI;gBACA2B,gBAAgB;mBACbR,kBADa;sBAEV,KAAKE,IAAL,CAAUO,WAAV,EAFU;yBAGP,KAAKN,KAAL,CAAWO,GAAX,CAAe,gBAAQ;2BACrBxB,KAAKuB,WAAL,EAAP;iBADK,CAHO;yBAMP,KAAKhC,MAAL,CAAYgC,WAAZ;aANb;;gBASME,UAAU,IAAIC,OAAOC,OAAX,CAAmB;0BACrB;aADE,CAAhB;mBAGOF,QAAQG,WAAR,CAAoBN,aAApB,CAAP;;;;kCAGMO,gBAAgB;mBACfA,eAAeC,OAAf,CAAuB,KAAKd,IAAL,CAAUvD,MAAjC,MAA6C,CAAC,CAArD;;;;;;;gDAIoB;mBAEhB,KAAKsE,WAAL,GACAC,MAAMC,OAAN,CAAc,KAAKC,aAAL,CAAmB,CAAnB,CAAd,EAAqC,CAArC,CADA,GAEA,KAAKlB,IAAL,CAAUvD,MAFV,GAGA,KAAKuD,IAAL,CAAU/C,YAJd;;;;;;;oDASwB;gBACpBkE,SAAS,KAAKlB,KAAL,CAAWO,GAAX,CAAe,UAACxB,IAAD,EAAOoC,KAAP,EAAiB;oBACrCC,gBAAgB,EAApB;8BACcC,IAAd,CAAmBF,UAAU,CAAV,GAAc,IAAd,GAAqB,GAAxC;8BACcE,IAAd,CAAmBtC,KAAKjB,WAAL,CAAiBwD,OAAjB,CAAyB,GAAzB,EAA8B,GAA9B,CAAnB;8BACcD,IAAd,CAAmB,MAAMtC,KAAKd,QAA9B;8BACcoD,IAAd,CAAmB,MAAMtC,KAAKhB,SAA9B;uBACOqD,cAAcG,IAAd,CAAmB,EAAnB,CAAP;aANS,CAAb;;mBASOL,OAAOK,IAAP,CAAY,EAAZ,CAAP;;;;mDAMF;gBAFExB,IAEF,uEAFS,YAET;gBADEyB,UACF,uEADeC,WAAWC,IAC1B;;gBACMR,SAAS,EAAb;gBACIS,aACI,KAAKb,WAAL,GACAC,MAAMC,OAAN,CAAc,KAAKjB,IAAL,CAAUtD,IAAV,CAAemF,QAAf,KAA4B,CAA1C,EAA6C,CAA7C,CADA,GAEAb,MAAMC,OAAN,CAAc,KAAKjB,IAAL,CAAUtD,IAAV,CAAeoF,OAAf,EAAd,EAAwC,CAAxC,CAJR;gBAKIC,mBAAmBf,MAAMC,OAAN,CACf,KAAK1C,MAAL,CAAYM,WAAZ,CAAwBmD,QAAxB,CAAiC,EAAjC,EAAqCC,WAArC,EADe,EAEf,CAFe,CALvB;gBASIC,mBAAmBlB,MAAMC,OAAN,CACf,KAAK1C,MAAL,CAAYoB,WAAZ,CAAwBqC,QAAxB,CAAiC,EAAjC,EAAqCC,WAArC,EADe,EAEf,CAFe,CATvB;;mBAcOX,IAAP,CAAY,KAAKtB,IAAL,CAAUvD,MAAtB;mBACO6E,IAAP,CAAYM,UAAZ;mBACON,IAAP,CAAY,KAAKtB,IAAL,CAAU/C,YAAtB;mBACOqE,IAAP,CAAYS,gBAAZ;mBACOT,IAAP,CAAYY,gBAAZ;mBACOZ,IAAP,CAAY,KAAKtB,IAAL,CAAUpD,KAAV,CAAgBW,EAAhB,IAAsB,UAAlC;mBACO+D,IAAP,CAAY,KAAKtB,IAAL,CAAUrD,MAAV,CAAiBY,EAA7B;mBACO+D,IAAP,CAAY,KAAKtB,IAAL,CAAUvD,MAAV,GAAmB,KAAKuD,IAAL,CAAU/C,YAAzC;mBACOqE,IAAP,CAAY,MAAMtB,IAAlB;mBACOsB,IAAP,CAAY,MAAM,KAAKrB,KAAL,CAAWI,MAA7B;mBACOiB,IAAP,CAAY,MAAM,KAAKa,aAAvB;mBACOb,IAAP,CAAY,MAAMG,UAAlB;;mBAEON,OAAOK,IAAP,CAAY,EAAZ,CAAP;;;;;;;+BA9GW;mBACJ,KAAKvB,KAAL,CAAWG,MAAX,CAAkB,gBAAQ;uBACtBpB,KAAKb,OAAL,KAAiBC,QAAQC,GAAhC;aADG,CAAP;;;;+BAKe;mBACR,KAAK4B,KAAL,CAAWG,MAAX,CAAkB,gBAAQ;uBACtBpB,KAAKb,OAAL,KAAiBC,QAAQoB,QAAhC;aADG,CAAP;;;;+BAKe;mBACR,KAAKS,KAAL,CAAWG,MAAX,CAAkB,gBAAQ;uBACtBpB,KAAKb,OAAL,KAAiBC,QAAQqB,QAAhC;aADG,CAAP;;;;+BAKc;mBACP,KAAKO,IAAL,CAAUtD,IAAV,CAAe0F,WAAf,KAA+B,IAAtC;;;;+BAGgB;gBACZC,QAAQ,KAAKrC,IAAL,CAAUtD,IAAV,CAAemF,QAAf,KAA4B,CAAxC;mBACOQ,QAAQ,CAAR,KAAc,CAAd,GAAkB,CAACA,QAAQ,CAAT,EAAYA,KAAZ,CAAlB,GAAuC,CAACA,KAAD,EAAQA,QAAQ,CAAhB,CAA9C;;;;+BAGgB;mBACT,KAAKpC,KAAL,CAAWlB,MAAX,CAAkB,UAACuD,GAAD,EAAMtD,IAAN,EAAe;uBAC7BsD,MAAMtD,KAAKd,QAAlB;aADG,EAEJ,CAFI,CAAP;;;;yCAnCoBqE,aAAa;mBAC1BA,YAAYC,KAAZ,CAAkB,UAAlB,EAA8BhC,GAA9B,CAAkC,kBAAU;uBACxCiC,OAAO5C,MAAP,CAAc,EAAd,EAAkB,EAAlB,CAAP;aADG,CAAP;;;;;;AAwHR,cAAe;aACFE,OADE;iBAEEvD,WAFF;UAGLsB,IAHK;YAIHU,MAJG;aAKFJ,OALE;gBAMCsD;CANhB;;;;;;;;"}