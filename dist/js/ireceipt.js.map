{"version":3,"file":"ireceipt.js","sources":["../../src/js/tax-type.js","../../src/js/receipt-info.js","../../src/js/item.js","../../src/js/amount.js","../../src/js/common/utils.js","../../src/js/encode-type.js","../../src/js/aes.js","../../src/js/receipt.js"],"sourcesContent":["export default {\n    TAX: 1,\n    ZERO_TAX: 2,\n    FREE_TAX: 3,\n    SPECIAL_TAX: 4,\n    COMPOUND_TAX: 9\n};\n","import { format } from 'date-fns';\n\nclass ReceiptInfo {\n    constructor(\n        number,\n        date,\n        seller,\n        buyer,\n        type = '07',\n        carrier,\n        donationID,\n        orderno\n    ) {\n        this.number = number;\n        this.date = date;\n        this.seller = seller;\n        this.buyer = buyer;\n        this.type = type;\n        this.carrier = carrier;\n        this.donationID = donationID;\n        this.orderno = orderno;\n        this.randomNumber = Math.floor(1000 + Math.random() * 9000);\n    }\n\n    toXMLObject() {\n        let xmlObject = {\n            InvoiceNumber: this.number,\n            InvoiceDate: format(this.date, 'yyyyMMdd'),\n            InvoiceTime: format(this.date, 'hh:mm:ss'),\n            Seller: {\n                Identifier: this.seller.id,\n                Name: this.seller.name\n            },\n            Buyer: {\n                Identifier: this.buyer.id || '0000000000',\n                Name: this.buyer.name\n            },\n            InvoiceType: this.type,\n            DonateMark: 0,\n            PrintMark: this.carrier ? 'N' : 'Y',\n            RandomNumber: this.randomNumber\n        };\n\n        if (this.donationID) {\n            xmlObject.DonateMark = 1;\n            xmlObject.NPOBAN = this.donationID;\n        }\n\n        if (this.carrier) {\n            xmlObject.CarrierType = this.carrier.type;\n            xmlObject.CarrierId1 = this.carrier.id;\n            xmlObject.CarrierId2 = this.carrier.id;\n        }\n\n        return xmlObject;\n    }\n}\n\nexport default ReceiptInfo;\n","import TaxType from './tax-type';\n\nclass Item {\n    constructor(\n        description,\n        unitPrice,\n        sequenceNumber,\n        quantity = 1,\n        taxType = TaxType.TAX\n    ) {\n        this.description = description;\n        this.unitPrice = parseInt(unitPrice);\n        this.sequenceNumber = sequenceNumber;\n        this.quantity = parseInt(quantity);\n        this.taxType = taxType;\n    }\n\n    toXMLObject() {\n        return {\n            ProductItem: {\n                Description: this.description,\n                Quantity: this.quantity,\n                UnitPrice: this.unitPrice,\n                Amount: this.amount,\n                SequenceNumber: this.sequenceNumber\n            }\n        };\n    }\n\n    get amount() {\n        return this.unitPrice * this.quantity;\n    }\n}\n\nexport default Item;\n","import TaxType from './tax-type';\n\nclass Amount {\n    constructor(taxItems, freeTaxItems, zeroTaxItems) {\n        const taxRate = 0.05;\n        this.salesAmount = Math.round(\n            taxItems.reduce(\n                (amount, item) => (amount + item.amount) / (1 + taxRate),\n                0\n            )\n        );\n        this.freeTaxSalesAmount = Math.round(\n            freeTaxItems.reduce((amount, item) => amount + item.amount, 0)\n        );\n        this.zeroTaxSalesAmount = Math.round(\n            zeroTaxItems.reduce((amount, item) => amount + item.amount, 0)\n        );\n\n        const hasTax = this.salesAmount !== 0,\n            hasFreeTax = this.freeTaxSalesAmount !== 0,\n            hasZeroTax = this.zeroTaxSalesAmount !== 0;\n\n        this.taxType = TaxType.SPECIAL_TAX;\n        if (\n            (hasTax && hasFreeTax) ||\n            (hasTax && hasZeroTax) ||\n            (hasFreeTax && hasZeroTax)\n        ) {\n            this.taxType = TaxType.COMPOUND_TAX;\n        } else if (hasTax) {\n            this.taxType = TaxType.TAX;\n        } else if (hasFreeTax) {\n            this.taxType = TaxType.FREE_TAX;\n        } else if (hasZeroTax) {\n            this.taxType = TaxType.ZERO_TAX;\n        }\n        this.taxRate =\n            this.taxType === TaxType.FREE_TAX ||\n            this.taxType === TaxType.ZERO_TAX\n                ? 0\n                : taxRate;\n        this.taxAmount = Math.round(this.salesAmount * this.taxRate);\n        this.totalAmount =\n            this.salesAmount +\n            this.freeTaxSalesAmount +\n            this.zeroTaxSalesAmount +\n            this.taxAmount;\n    }\n\n    toXMLObject() {\n        return {\n            SalesAmount: this.salesAmount,\n            FreeTaxSalesAmount: this.freeTaxSalesAmount,\n            ZeroTaxSalesAmount: this.zeroTaxSalesAmount,\n            TaxType: this.taxType,\n            TaxRate: this.taxRate,\n            TaxAmount: this.taxAmount,\n            TotalAmount: this.totalAmount\n        };\n    }\n}\n\nexport default Amount;\n","export default {\n    padZero: function(number, size) {\n        return ('000000000' + number).substr(-size);\n    },\n    repeat: function(string, times) {\n        let repeatedString = '';\n        while (times > 0) {\n            repeatedString += string;\n            times--;\n        }\n        return repeatedString;\n    }\n};\n","export default {\n    BIG5: 0,\n    UTF8: 1,\n    BASE64: 3\n};\n","import aesjs from 'aes-js';\n\nexport default {\n    encrypt: function(AESKey, plainText) {\n        if (!AESKey) {\n            throw new TypeError('AES Key is not found!');\n        }\n        const textBytes = aesjs.utils.utf8.toBytes(plainText),\n            aesCtr = new aesjs.ModeOfOperation.ctr(\n                AESKey,\n                new aesjs.Counter(5)\n            );\n\n        return aesCtr.encrypt(textBytes);\n    },\n    decrypt: function(AESKey, encryptedBytes) {\n        if (!AESKey) {\n            throw new TypeError('AES Key is not found');\n        }\n        const aesCtr = new aesjs.ModeOfOperation.ctr(\n                AESKey,\n                new aesjs.Counter(5)\n            ),\n            decryptedBytes = aesCtr.decrypt(encryptedBytes);\n\n        return aesjs.utils.utf8.fromBytes(decryptedBytes);\n    }\n};\n","import xml2js from 'xml2js';\nimport TaxType from './tax-type';\nimport ReceiptInfo from './receipt-info';\nimport Item from './item';\nimport Amount from './amount';\nimport utils from './common/utils';\nimport EncodeType from './encode-type';\nimport aes from './aes';\nimport JsBarcode from 'jsbarcode';\nimport QRCode from 'qrcode';\nimport { format } from 'date-fns';\nimport template from '../template/ireceipt.html';\n\nconst defaultInvoiceAttr = {\n        xmlns: 'urn:GEINV:eInvoiceMessage:C0401:3.1',\n        'xmlns:xsi': 'http://www.w3.org/2001/XMLSchema-instance',\n        'xsi:schemaLocation': 'urn:GEINV:eInvoiceMessage:C0401:3.1 C0401.xsd'\n    },\n    renderQRcode = function(text) {\n        return new Promise((resolve, reject) => {\n            const opts = {\n                errorCorrectionLevel: 'L',\n                version: 6\n            };\n            QRCode.toString(text, opts, (err, string) => {\n                if (err) {\n                    reject(error);\n                }\n                resolve(string);\n            });\n        });\n    };\n\nclass Receipt {\n    constructor(info, items) {\n        if (!(info instanceof ReceiptInfo)) {\n            throw new TypeError('Info is not ReceiptInfo class!');\n        }\n        const invalidItems = items.filter(item => !(item instanceof Item));\n        if (invalidItems.length > 0) {\n            throw new TypeError('Some items are not Item class!');\n        }\n\n        this.info = info;\n        this.items = items;\n        this.amount = new Amount(\n            this.taxItems,\n            this.freeTaxItems,\n            this.zeroTaxItems\n        );\n    }\n\n    // Static Methods\n    // The format of the list of winners:\n    // 53925591  10510LC60123189...\n    // 53925591  10510LC60122037...\n    // The range of receipt number is the 15th position and 10 characters\n    static parseWinnersList(winnersList) {\n        return winnersList\n            .split(/\\n|\\r\\n?/)\n            .map(winner => winner.substr(15, 10));\n    }\n\n    // Getters\n    get taxItems() {\n        return this.items.filter(item => item.taxType === TaxType.TAX);\n    }\n\n    get freeTaxItems() {\n        return this.items.filter(item => item.taxType === TaxType.FREE_TAX);\n    }\n\n    get zeroTaxItems() {\n        return this.items.filter(item => item.taxType === TaxType.ZERO_TAX);\n    }\n\n    get chineseYear() {\n        return this.info.date.getFullYear() - 1911;\n    }\n\n    get winningMonths() {\n        let month = this.info.date.getMonth() + 1;\n        return month % 2 === 0 ? [month - 1, month] : [month, month + 1];\n    }\n\n    get totalQuantity() {\n        return this.items.reduce((sum, item) => sum + item.quantity, 0);\n    }\n\n    // Methods\n    // Reference: https://www.einvoice.nat.gov.tw/home/DownLoad?fileName=1447235507091_0.zip\n    toXML() {\n        let receiptObject = {\n            $: defaultInvoiceAttr,\n            Main: this.info.toXMLObject(),\n            Details: this.items.map(item => item.toXMLObject()),\n            Amounts: this.amount.toXMLObject()\n        };\n\n        const builder = new xml2js.Builder({\n            rootName: 'Invoice'\n        });\n        return builder.buildObject(receiptObject);\n    }\n\n    isWinning(winningNumbers) {\n        return winningNumbers.indexOf(this.info.number) !== -1;\n    }\n\n    // Reference: https://www.einvoice.nat.gov.tw/home/DownLoad?fileName=1479449792874_0.6(20161115).pdf\n    generateBarCodeString() {\n        return (\n            this.chineseYear +\n            utils.padZero(this.winningMonths[1], 2) +\n            this.info.number +\n            this.info.randomNumber\n        );\n    }\n\n    // Reference: https://www.einvoice.nat.gov.tw/home/DownLoad?fileName=1479449792874_0.6(20161115).pdf\n    generateRightQRCodeString() {\n        let qrcode = this.items.map((item, index) => {\n            let combineString = [];\n            combineString.push(index === 0 ? '**' : ':');\n            combineString.push(item.description.replace(':', '-'));\n            combineString.push(':' + item.quantity);\n            combineString.push(':' + item.unitPrice);\n            return combineString.join('');\n        });\n\n        return qrcode.join('');\n    }\n\n    generateLeftQRCodeString(\n        AESKey,\n        info = utils.repeat('*', 10),\n        encodeType = EncodeType.UTF8\n    ) {\n        if (!AESKey) {\n            throw new TypeError('AES Key is not found');\n        }\n\n        let qrcode = [],\n            dateString =\n                this.chineseYear +\n                utils.padZero(this.info.date.getMonth() + 1, 2) +\n                utils.padZero(this.info.date.getDate(), 2),\n            salesAmountHex16 = utils.padZero(\n                this.amount.salesAmount.toString(16).toUpperCase(),\n                8\n            ),\n            totalAmountHex16 = utils.padZero(\n                this.amount.totalAmount.toString(16).toUpperCase(),\n                8\n            ),\n            plainText = this.info.number + this.info.randomNumber,\n            padding = 16 - (plainText.length % 16);\n\n        plainText += utils.repeat(padding, padding);\n\n        const encryptText = Buffer.from(\n            aes.encrypt(AESKey, plainText)\n        ).toString('base64');\n\n        qrcode.push(this.info.number);\n        qrcode.push(dateString);\n        qrcode.push(this.info.randomNumber);\n        qrcode.push(salesAmountHex16);\n        qrcode.push(totalAmountHex16);\n        qrcode.push(this.info.buyer.id || utils.repeat('0', 8));\n        qrcode.push(this.info.seller.id);\n        qrcode.push(encryptText);\n        qrcode.push(':' + info);\n        qrcode.push(':' + this.items.length);\n        qrcode.push(':' + this.totalQuantity);\n        qrcode.push(':' + encodeType);\n\n        return qrcode.join('');\n    }\n\n    render(AESKey) {\n        if (!AESKey) {\n            throw new TypeError('AES Key is not found');\n        }\n\n        const promises = [\n                this.renderBarCode(),\n                this.renderLeftQRCode(AESKey),\n                this.renderRightQRCode()\n            ],\n            intlNumberFormat = new Intl.NumberFormat();\n\n        return Promise.all(promises).then(\n            ([barCode, leftQRCode, rightQRCode]) => {\n                const buyerIdHtmlString = this.info.buyer.id\n                    ? `<div class=\"buyer-identifier\">\n                        買方${this.info.buyer.id}\n                      </div>`\n                    : '';\n\n                return `${template}\n                    <div class=\"receipt\">\n                        <div class=\"einvoice-name\">\n                            ${this.info.seller.name}\n                        </div>\n                        <div class=\"receipt-title\">電子發票證明聯</div>\n                        <div class=\"receipt-year-month\">\n                            ${this.chineseYear}年\n                            ${this.winningMonths[0]}-${this.winningMonths[1]}月 \n                        </div>\n                        <div class=\"receipt-invoice-number\">\n                            ${this.info.number}\n                        </div>\n                        <div class=\"receipt-issue-time\">\n                            ${format(this.info.date, 'yyyy-MM-dd hh:mm:ss')}\n                        </div>\n                        <div class=\"receipt-random-number\">\n                            隨機碼 ${this.info.randomNumber}\n                        </div>\n                        <div class=\"receipt-amount\">\n                            總計 ${intlNumberFormat.format(\n                                this.amount.totalAmount\n                            )}\n                        </div>\n                        <div class=\"einvoice-identifier\">\n                            賣方${this.info.seller.id}\n                        </div>\n                        ${buyerIdHtmlString}\n                        <div class=\"einvoice-barcode\">${barCode}</div>\n                        <div class=\"einvoice-qrcode-left\">${leftQRCode}</div>\n                        <div class=\"einvoice-qrcode-right\">${rightQRCode}</div>\n                        <div class=\"einvoice-remark\">退貨憑電子發票證明聯正本辦理</div>\n                    </div>`;\n            }\n        );\n    }\n\n    renderBarCode() {\n        const svgObject = document.createElementNS(\n                'http://www.w3.org/2000/svg',\n                'svg'\n            ),\n            xmlSerializer = new XMLSerializer();\n\n        JsBarcode(svgObject, this.generateBarCodeString(), {\n            format: 'CODE39',\n            displayValue: false,\n            width: 0.6,\n            height: 25\n        });\n\n        return Promise.resolve(xmlSerializer.serializeToString(svgObject));\n    }\n\n    renderRightQRCode() {\n        return renderQRcode(this.generateRightQRCodeString());\n    }\n\n    renderLeftQRCode(AESKey) {\n        if (!AESKey) {\n            throw new TypeError('AES Key is not found');\n        }\n        return renderQRcode(this.generateLeftQRCodeString(AESKey));\n    }\n\n    get taxItems() {\n        return this.items.filter(item => item.taxType === TaxType.TAX);\n    }\n\n    get freeTaxItems() {\n        return this.items.filter(item => item.taxType === TaxType.FREE_TAX);\n    }\n\n    get zeroTaxItems() {\n        return this.items.filter(item => item.taxType === TaxType.ZERO_TAX);\n    }\n\n    get chineseYear() {\n        return this.info.date.getFullYear() - 1911;\n    }\n\n    get winningMonths() {\n        let month = this.info.date.getMonth() + 1;\n        return month % 2 === 0 ? [month - 1, month] : [month, month + 1];\n    }\n\n    get totalQuantity() {\n        return this.items.reduce((sum, item) => sum + item.quantity, 0);\n    }\n}\n\nexport default {\n    Receipt: Receipt,\n    ReceiptInfo: ReceiptInfo,\n    Item: Item,\n    Amount: Amount,\n    TaxType: TaxType,\n    EncodeType: EncodeType\n};\n"],"names":["TAX","ZERO_TAX","FREE_TAX","SPECIAL_TAX","COMPOUND_TAX","ReceiptInfo","number","date","seller","buyer","type","carrier","donationID","orderno","randomNumber","Math","floor","random","xmlObject","InvoiceNumber","InvoiceDate","format","InvoiceTime","Seller","Identifier","id","Name","name","Buyer","InvoiceType","DonateMark","PrintMark","RandomNumber","NPOBAN","CarrierType","CarrierId1","CarrierId2","Item","description","unitPrice","sequenceNumber","quantity","taxType","TaxType","parseInt","ProductItem","Description","Quantity","UnitPrice","Amount","amount","SequenceNumber","taxItems","freeTaxItems","zeroTaxItems","taxRate","salesAmount","round","reduce","item","freeTaxSalesAmount","zeroTaxSalesAmount","hasTax","hasFreeTax","hasZeroTax","taxAmount","totalAmount","SalesAmount","FreeTaxSalesAmount","ZeroTaxSalesAmount","TaxRate","TaxAmount","TotalAmount","padZero","size","substr","repeat","string","times","repeatedString","BIG5","UTF8","BASE64","encrypt","AESKey","plainText","TypeError","textBytes","aesjs","utils","utf8","toBytes","aesCtr","ModeOfOperation","ctr","Counter","decrypt","encryptedBytes","decryptedBytes","fromBytes","defaultInvoiceAttr","xmlns","renderQRcode","text","Promise","resolve","reject","opts","errorCorrectionLevel","version","QRCode","toString","err","error","Receipt","info","items","invalidItems","filter","length","receiptObject","$","Main","toXMLObject","Details","map","Amounts","builder","xml2js","Builder","rootName","buildObject","winningNumbers","indexOf","chineseYear","winningMonths","qrcode","index","combineString","push","replace","join","encodeType","EncodeType","dateString","getMonth","getDate","salesAmountHex16","toUpperCase","totalAmountHex16","padding","encryptText","Buffer","from","aes","totalQuantity","promises","renderBarCode","renderLeftQRCode","renderRightQRCode","intlNumberFormat","Intl","NumberFormat","all","then","barCode","leftQRCode","rightQRCode","buyerIdHtmlString","template","svgObject","document","createElementNS","xmlSerializer","XMLSerializer","JsBarcode","generateBarCodeString","displayValue","width","height","serializeToString","generateRightQRCodeString","generateLeftQRCodeString","getFullYear","month","sum","winnersList","split","winner"],"mappings":"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"}