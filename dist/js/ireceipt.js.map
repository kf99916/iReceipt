{"version":3,"file":"ireceipt.js","sources":["../../src/js/tax-type.js","../../src/js/receipt-info.js","../../src/js/item.js","../../src/js/amount.js","../../src/js/common/utils.js","../../src/js/encode-type.js","../../src/js/aes.js","../../src/js/receipt.js"],"sourcesContent":["export default {\n    TAX: 1,\n    ZERO_TAX: 2,\n    FREE_TAX: 3,\n    SPECIAL_TAX: 4,\n    COMPOUND_TAX: 9\n};\n","import { format } from 'date-fns/esm';\n\nclass ReceiptInfo {\n    constructor(\n        number,\n        date,\n        seller,\n        buyer,\n        type = '07',\n        carrier,\n        donationID,\n        orderno\n    ) {\n        this.number = number;\n        this.date = date;\n        this.seller = seller;\n        this.buyer = buyer;\n        this.type = type;\n        this.carrier = carrier;\n        this.donationID = donationID;\n        this.orderno = orderno;\n        this.randomNumber = Math.floor(1000 + Math.random() * 9000);\n    }\n\n    toXMLObject() {\n        let xmlObject = {\n            InvoiceNumber: this.number,\n            InvoiceDate: format(this.date, 'YYYYMMDD'),\n            InvoiceTime: format(this.date, 'hh:mm:ss'),\n            Seller: {\n                Identifier: this.seller.id,\n                Name: this.seller.name\n            },\n            Buyer: {\n                Identifier: this.buyer.id || '0000000000',\n                Name: this.buyer.name\n            },\n            InvoiceType: this.type,\n            DonateMark: 0,\n            PrintMark: this.carrier ? 'N' : 'Y',\n            RandomNumber: this.randomNumber\n        };\n\n        if (this.donationID) {\n            xmlObject.DonateMark = 1;\n            xmlObject.NPOBAN = this.donationID;\n        }\n\n        if (this.carrier) {\n            xmlObject.CarrierType = this.carrier.type;\n            xmlObject.CarrierId1 = this.carrier.id;\n            xmlObject.CarrierId2 = this.carrier.id;\n        }\n\n        return xmlObject;\n    }\n}\n\nexport default ReceiptInfo;\n","import TaxType from './tax-type';\n\nclass Item {\n    constructor(\n        description,\n        unitPrice,\n        sequenceNumber,\n        quantity = 1,\n        taxType = TaxType.TAX\n    ) {\n        this.description = description;\n        this.unitPrice = parseInt(unitPrice);\n        this.sequenceNumber = sequenceNumber;\n        this.quantity = parseInt(quantity);\n        this.taxType = taxType;\n    }\n\n    toXMLObject() {\n        return {\n            ProductItem: {\n                Description: this.description,\n                Quantity: this.quantity,\n                UnitPrice: this.unitPrice,\n                Amount: this.amount,\n                SequenceNumber: this.sequenceNumber\n            }\n        };\n    }\n\n    get amount() {\n        return this.unitPrice * this.quantity;\n    }\n}\n\nexport default Item;\n","import TaxType from './tax-type';\n\nclass Amount {\n    constructor(taxItems, freeTaxItems, zeroTaxItems) {\n        const taxRate = 0.05;\n        this.salesAmount = Math.round(\n            taxItems.reduce(\n                (amount, item) => (amount + item.amount) / (1 + taxRate),\n                0\n            )\n        );\n        this.freeTaxSalesAmount = Math.round(\n            freeTaxItems.reduce((amount, item) => amount + item.amount, 0)\n        );\n        this.zeroTaxSalesAmount = Math.round(\n            zeroTaxItems.reduce((amount, item) => amount + item.amount, 0)\n        );\n\n        const hasTax = this.salesAmount !== 0,\n            hasFreeTax = this.freeTaxSalesAmount !== 0,\n            hasZeroTax = this.zeroTaxSalesAmount !== 0;\n\n        this.taxType = TaxType.SPECIAL_TAX;\n        if (\n            (hasTax && hasFreeTax) ||\n            (hasTax && hasZeroTax) ||\n            (hasFreeTax && hasZeroTax)\n        ) {\n            this.taxType = TaxType.COMPOUND_TAX;\n        } else if (hasTax) {\n            this.taxType = TaxType.TAX;\n        } else if (hasFreeTax) {\n            this.taxType = TaxType.FREE_TAX;\n        } else if (hasZeroTax) {\n            this.taxType = TaxType.ZERO_TAX;\n        }\n        this.taxRate =\n            this.taxType === TaxType.FREE_TAX ||\n            this.taxType === TaxType.ZERO_TAX\n                ? 0\n                : taxRate;\n        this.taxAmount = Math.round(this.salesAmount * this.taxRate);\n        this.totalAmount =\n            this.salesAmount +\n            this.freeTaxSalesAmount +\n            this.zeroTaxSalesAmount +\n            this.taxAmount;\n    }\n\n    toXMLObject() {\n        return {\n            SalesAmount: this.salesAmount,\n            FreeTaxSalesAmount: this.freeTaxSalesAmount,\n            ZeroTaxSalesAmount: this.zeroTaxSalesAmount,\n            TaxType: this.taxType,\n            TaxRate: this.taxRate,\n            TaxAmount: this.taxAmount,\n            TotalAmount: this.totalAmount\n        };\n    }\n}\n\nexport default Amount;\n","export default {\n    padZero: function(number, size) {\n        return ('000000000' + number).substr(-size);\n    },\n    repeat: function(string, times) {\n        let repeatedString = '';\n        while (times > 0) {\n            repeatedString += string;\n            times--;\n        }\n        return repeatedString;\n    }\n};\n","export default {\n    BIG5: 0,\n    UTF8: 1,\n    BASE64: 3\n};\n","import aesjs from 'aes-js';\n\nexport default {\n    encrypt: function(AESKey, plainText) {\n        if (!AESKey) {\n            throw new TypeError('AES Key is not found!');\n        }\n        const textBytes = aesjs.utils.utf8.toBytes(plainText),\n            aesCtr = new aesjs.ModeOfOperation.ctr(\n                AESKey,\n                new aesjs.Counter(5)\n            );\n\n        return aesCtr.encrypt(textBytes);\n    },\n    decrypt: function(AESKey, encryptedBytes) {\n        if (!AESKey) {\n            throw new TypeError('AES Key is not found');\n        }\n        const aesCtr = new aesjs.ModeOfOperation.ctr(\n                AESKey,\n                new aesjs.Counter(5)\n            ),\n            decryptedBytes = aesCtr.decrypt(encryptedBytes);\n\n        return aesjs.utils.utf8.fromBytes(decryptedBytes);\n    }\n};\n","import xml2js from 'xml2js';\nimport TaxType from './tax-type';\nimport ReceiptInfo from './receipt-info';\nimport Item from './item';\nimport Amount from './amount';\nimport utils from './common/utils';\nimport EncodeType from './encode-type';\nimport aes from './aes';\nimport JsBarcode from 'jsbarcode';\nimport QRCode from 'qrcode';\nimport { format } from 'date-fns/esm';\nimport template from '../template/ireceipt.html';\n\nconst defaultInvoiceAttr = {\n        xmlns: 'urn:GEINV:eInvoiceMessage:C0401:3.1',\n        'xmlns:xsi': 'http://www.w3.org/2001/XMLSchema-instance',\n        'xsi:schemaLocation': 'urn:GEINV:eInvoiceMessage:C0401:3.1 C0401.xsd'\n    },\n    renderQRcode = function(text) {\n        return new Promise((resolve, reject) => {\n            const opts = {\n                errorCorrectionLevel: 'L',\n                version: 6\n            };\n            QRCode.toString(text, opts, (err, string) => {\n                if (err) {\n                    reject(error);\n                }\n                resolve(string);\n            });\n        });\n    };\n\nclass Receipt {\n    constructor(info, items) {\n        if (!(info instanceof ReceiptInfo)) {\n            throw new TypeError('Info is not ReceiptInfo class!');\n        }\n        const invalidItems = items.filter(item => {\n            return !(item instanceof Item);\n        });\n        if (invalidItems.length > 0) {\n            throw new TypeError('Some items are not Item class!');\n        }\n\n        this.info = info;\n        this.items = items;\n        this.amount = new Amount(\n            this.taxItems,\n            this.freeTaxItems,\n            this.zeroTaxItems\n        );\n    }\n\n    // Static Methods\n    // The format of the list of winners:\n    // 53925591  10510LC60123189...\n    // 53925591  10510LC60122037...\n    // The range of receipt number is the 15th position and 10 characters\n    static parseWinnersList(winnersList) {\n        return winnersList.split(/\\n|\\r\\n?/).map(winner => {\n            return winner.substr(15, 10);\n        });\n    }\n\n    // Getters\n    get taxItems() {\n        return this.items.filter(item => {\n            return item.taxType === TaxType.TAX;\n        });\n    }\n\n    get freeTaxItems() {\n        return this.items.filter(item => {\n            return item.taxType === TaxType.FREE_TAX;\n        });\n    }\n\n    get zeroTaxItems() {\n        return this.items.filter(item => {\n            return item.taxType === TaxType.ZERO_TAX;\n        });\n    }\n\n    get chineseYear() {\n        return this.info.date.getFullYear() - 1911;\n    }\n\n    get winningMonths() {\n        let month = this.info.date.getMonth() + 1;\n        return month % 2 === 0 ? [month - 1, month] : [month, month + 1];\n    }\n\n    get totalQuantity() {\n        return this.items.reduce((sum, item) => {\n            return sum + item.quantity;\n        }, 0);\n    }\n\n    // Methods\n    // Reference: https://www.einvoice.nat.gov.tw/home/DownLoad?fileName=1447235507091_0.zip\n    toXML() {\n        let receiptObject = {\n            $: defaultInvoiceAttr,\n            Main: this.info.toXMLObject(),\n            Details: this.items.map(item => {\n                return item.toXMLObject();\n            }),\n            Amounts: this.amount.toXMLObject()\n        };\n\n        const builder = new xml2js.Builder({\n            rootName: 'Invoice'\n        });\n        return builder.buildObject(receiptObject);\n    }\n\n    isWinning(winningNumbers) {\n        return winningNumbers.indexOf(this.info.number) !== -1;\n    }\n\n    // Reference: https://www.einvoice.nat.gov.tw/home/DownLoad?fileName=1479449792874_0.6(20161115).pdf\n    generateBarCodeString() {\n        return (\n            this.chineseYear +\n            utils.padZero(this.winningMonths[1], 2) +\n            this.info.number +\n            this.info.randomNumber\n        );\n    }\n\n    // Reference: https://www.einvoice.nat.gov.tw/home/DownLoad?fileName=1479449792874_0.6(20161115).pdf\n    generateRightQRCodeString() {\n        let qrcode = this.items.map((item, index) => {\n            let combineString = [];\n            combineString.push(index === 0 ? '**' : ':');\n            combineString.push(item.description.replace(':', '-'));\n            combineString.push(':' + item.quantity);\n            combineString.push(':' + item.unitPrice);\n            return combineString.join('');\n        });\n\n        return qrcode.join('');\n    }\n\n    generateLeftQRCodeString(\n        AESKey,\n        info = utils.repeat('*', 10),\n        encodeType = EncodeType.UTF8\n    ) {\n        if (!AESKey) {\n            throw new TypeError('AES Key is not found');\n        }\n\n        let qrcode = [],\n            dateString =\n                this.chineseYear +\n                utils.padZero(this.info.date.getMonth() + 1, 2) +\n                utils.padZero(this.info.date.getDate(), 2),\n            salesAmountHex16 = utils.padZero(\n                this.amount.salesAmount.toString(16).toUpperCase(),\n                8\n            ),\n            totalAmountHex16 = utils.padZero(\n                this.amount.totalAmount.toString(16).toUpperCase(),\n                8\n            ),\n            plainText = this.info.number + this.info.randomNumber,\n            padding = 16 - plainText.length % 16;\n\n        plainText += utils.repeat(padding, padding);\n\n        const encryptText = Buffer.from(\n            aes.encrypt(AESKey, plainText)\n        ).toString('base64');\n\n        qrcode.push(this.info.number);\n        qrcode.push(dateString);\n        qrcode.push(this.info.randomNumber);\n        qrcode.push(salesAmountHex16);\n        qrcode.push(totalAmountHex16);\n        qrcode.push(this.info.buyer.id || utils.repeat('0', 8));\n        qrcode.push(this.info.seller.id);\n        qrcode.push(encryptText);\n        qrcode.push(':' + info);\n        qrcode.push(':' + this.items.length);\n        qrcode.push(':' + this.totalQuantity);\n        qrcode.push(':' + encodeType);\n\n        return qrcode.join('');\n    }\n\n    render(AESKey) {\n        if (!AESKey) {\n            throw new TypeError('AES Key is not found');\n        }\n\n        const promises = [\n                this.renderBarCode(),\n                this.renderLeftQRCode(AESKey),\n                this.renderRightQRCode()\n            ],\n            intlNumberFormat = new Intl.NumberFormat();\n\n        return Promise.all(promises).then(\n            ([barCode, leftQRCode, rightQRCode]) => {\n                const buyerIdHtmlString = this.info.buyer.id\n                    ? `<div class=\"buyer-identifier\">\n                        買方${this.info.buyer.id}\n                      </div>`\n                    : '';\n\n                return `${template}\n                    <div class=\"receipt\">\n                        <div class=\"einvoice-name\">\n                            ${this.info.seller.name}\n                        </div>\n                        <div class=\"receipt-title\">電子發票證明聯</div>\n                        <div class=\"receipt-year-month\">\n                            ${this.chineseYear}年\n                            ${this.winningMonths[0]}-${this.winningMonths[1]}月 \n                        </div>\n                        <div class=\"receipt-invoice-number\">\n                            ${this.info.number}\n                        </div>\n                        <div class=\"receipt-issue-time\">\n                            ${format(this.info.date, 'YYYY-MM-DD hh:mm:ss')}\n                        </div>\n                        <div class=\"receipt-random-number\">\n                            隨機碼 ${this.info.randomNumber}\n                        </div>\n                        <div class=\"receipt-amount\">\n                            總計 ${intlNumberFormat.format(\n                                this.amount.totalAmount\n                            )}\n                        </div>\n                        <div class=\"einvoice-identifier\">\n                            賣方${this.info.seller.id}\n                        </div>\n                        ${buyerIdHtmlString}\n                        <div class=\"einvoice-barcode\">${barCode}</div>\n                        <div class=\"einvoice-qrcode-left\">${leftQRCode}</div>\n                        <div class=\"einvoice-qrcode-right\">${rightQRCode}</div>\n                        <div class=\"einvoice-remark\">退貨憑電子發票證明聯正本辦理</div>\n                    </div>`;\n            }\n        );\n    }\n\n    renderBarCode() {\n        const svgObject = document.createElementNS(\n                'http://www.w3.org/2000/svg',\n                'svg'\n            ),\n            xmlSerializer = new XMLSerializer();\n\n        JsBarcode(svgObject, this.generateBarCodeString(), {\n            format: 'CODE39',\n            displayValue: false,\n            width: 0.6,\n            height: 25\n        });\n\n        return Promise.resolve(xmlSerializer.serializeToString(svgObject));\n    }\n\n    renderRightQRCode() {\n        return renderQRcode(this.generateRightQRCodeString());\n    }\n\n    renderLeftQRCode(AESKey) {\n        if (!AESKey) {\n            throw new TypeError('AES Key is not found');\n        }\n        return renderQRcode(this.generateLeftQRCodeString(AESKey));\n    }\n\n    get taxItems() {\n        return this.items.filter(item => {\n            return item.taxType === TaxType.TAX;\n        });\n    }\n\n    get freeTaxItems() {\n        return this.items.filter(item => {\n            return item.taxType === TaxType.FREE_TAX;\n        });\n    }\n\n    get zeroTaxItems() {\n        return this.items.filter(item => {\n            return item.taxType === TaxType.ZERO_TAX;\n        });\n    }\n\n    get chineseYear() {\n        return this.info.date.getFullYear() - 1911;\n    }\n\n    get winningMonths() {\n        let month = this.info.date.getMonth() + 1;\n        return month % 2 === 0 ? [month - 1, month] : [month, month + 1];\n    }\n\n    get totalQuantity() {\n        return this.items.reduce((sum, item) => {\n            return sum + item.quantity;\n        }, 0);\n    }\n}\n\nexport default {\n    Receipt: Receipt,\n    ReceiptInfo: ReceiptInfo,\n    Item: Item,\n    Amount: Amount,\n    TaxType: TaxType,\n    EncodeType: EncodeType\n};\n"],"names":["ReceiptInfo","number","date","seller","buyer","type","carrier","donationID","orderno","randomNumber","Math","floor","random","xmlObject","format","id","name","DonateMark","NPOBAN","CarrierType","CarrierId1","CarrierId2","Item","description","unitPrice","sequenceNumber","quantity","taxType","TaxType","TAX","parseInt","amount","Amount","taxItems","freeTaxItems","zeroTaxItems","taxRate","salesAmount","round","reduce","item","freeTaxSalesAmount","zeroTaxSalesAmount","hasTax","hasFreeTax","hasZeroTax","SPECIAL_TAX","COMPOUND_TAX","FREE_TAX","ZERO_TAX","taxAmount","totalAmount","size","substr","string","times","repeatedString","AESKey","plainText","TypeError","textBytes","aesjs","utils","utf8","toBytes","aesCtr","ModeOfOperation","ctr","Counter","encrypt","encryptedBytes","decryptedBytes","decrypt","fromBytes","defaultInvoiceAttr","renderQRcode","text","Promise","resolve","reject","opts","toString","err","error","Receipt","info","items","invalidItems","filter","length","receiptObject","toXMLObject","map","builder","xml2js","Builder","buildObject","winningNumbers","indexOf","chineseYear","padZero","winningMonths","qrcode","index","combineString","push","replace","join","repeat","encodeType","EncodeType","UTF8","dateString","getMonth","getDate","salesAmountHex16","toUpperCase","totalAmountHex16","padding","encryptText","Buffer","from","aes","totalQuantity","promises","renderBarCode","renderLeftQRCode","renderRightQRCode","intlNumberFormat","Intl","NumberFormat","all","then","barCode","leftQRCode","rightQRCode","buyerIdHtmlString","template","svgObject","document","createElementNS","xmlSerializer","XMLSerializer","generateBarCodeString","serializeToString","generateRightQRCodeString","generateLeftQRCodeString","getFullYear","month","sum","winnersList","split","winner"],"mappings":"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"}