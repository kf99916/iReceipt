{"version":3,"file":"ireceipt.js","sources":["../../src/tax-type.js","../../src/receipt-info.js","../../src/item.js","../../src/amount.js","../../src/receipt.js"],"sourcesContent":["export default {\n    TAX: 1,\n    ZERO_TAX: 2,\n    FREE_TAX: 3,\n    SPECIAL_TAX: 4,\n    COMPOUND_TAX: 9\n};\n","import { format } from 'date-fns/esm';\n\nclass ReceiptInfo {\n    constructor(\n        number,\n        date,\n        seller,\n        buyer,\n        type,\n        carrier,\n        donationID,\n        orderno\n    ) {\n        this.number = number;\n        this.date = date;\n        this.seller = seller;\n        this.buyer = buyer;\n        this.buyer.id = this.buyer.id || '0000000000';\n        this.type = type || '07';\n        this.carrier = carrier;\n        this.donationID = donationID;\n        this.randomNumber = Math.floor(1000 + Math.random() * 9000);\n        this.orderno = orderno;\n    }\n\n    toXMLObject() {\n        let xmlObject = {\n            InvoiceNumber: this.number,\n            InvoiceDate: format(this.date, 'YYYYMMDD'),\n            InvoiceTime: format(this.date, 'hh:mm:ss'),\n            Seller: {\n                Identifier: this.seller.id,\n                Name: this.seller.name\n            },\n            Buyer: {\n                Identifier: this.buyer.id,\n                Name: this.buyer.name\n            },\n            InvoiceType: this.type,\n            DonateMark: 0,\n            PrintMark: this.carrier ? 'N' : 'Y',\n            RandomNumber: this.randomNumber\n        };\n\n        if (this.donationID) {\n            xmlObject.DonateMark = 1;\n            xmlObject.NPOBAN = this.donationID;\n        }\n\n        if (this.carrier) {\n            xmlObject.CarrierType = this.carrier.type;\n            xmlObject.CarrierId1 = this.carrier.id;\n            xmlObject.CarrierId2 = this.carrier.id;\n        }\n\n        return xmlObject;\n    }\n}\n\nexport default ReceiptInfo;\n","import TaxType from './tax-type';\n\nclass Item {\n    constructor(description, unitPrice, sequenceNumber, quantity, taxType) {\n        this.description = description;\n        this.unitPrice = parseInt(unitPrice);\n        this.sequenceNumber = sequenceNumber;\n        this.quantity = parseInt(quantity) || 1;\n        this.taxType = taxType || TaxType.TAX;\n    }\n\n    toXMLObject() {\n        return {\n            ProductItem: {\n                Description: this.description,\n                Quantity: this.quantity,\n                UnitPrice: this.unitPrice,\n                Amount: this.amount,\n                SequenceNumber: this.sequenceNumber\n            }\n        };\n    }\n\n    get amount() {\n        return this.unitPrice * this.quantity;\n    }\n}\n\nexport default Item;\n","import TaxType from './tax-type';\n\nclass Amount {\n    constructor(taxItems, freeTaxItems, zeroTaxItems) {\n        const taxRate = 0.05;\n        this.salesAmount = Math.round(\n            taxItems.reduce(\n                (amount, item) => (amount + item.amount) / (1 + taxRate),\n                0\n            )\n        );\n        this.freeTaxSalesAmount = Math.round(\n            freeTaxItems.reduce((amount, item) => amount + item.amount, 0)\n        );\n        this.zeroTaxSalesAmount = Math.round(\n            zeroTaxItems.reduce((amount, item) => amount + item.amount, 0)\n        );\n\n        const hasTax = this.salesAmount !== 0,\n            hasFreeTax = this.freeTaxSalesAmount !== 0,\n            hasZeroTax = this.zeroTaxSalesAmount !== 0;\n\n        this.taxType = TaxType.SPECIAL_TAX;\n        if (\n            (hasTax && hasFreeTax) ||\n            (hasTax && hasZeroTax) ||\n            (hasFreeTax && hasZeroTax)\n        ) {\n            this.taxType = TaxType.COMPOUND_TAX;\n        } else if (hasTax) {\n            this.taxType = TaxType.TAX;\n        } else if (hasFreeTax) {\n            this.taxType = TaxType.FREE_TAX;\n        } else if (hasZeroTax) {\n            this.taxType = TaxType.ZERO_TAX;\n        }\n        this.taxRate =\n            this.taxType === TaxType.FREE_TAX ||\n            this.taxType === TaxType.ZERO_TAX\n                ? 0\n                : taxRate;\n        this.taxAmount = Math.round(this.salesAmount * this.taxRate);\n        this.totalAmount =\n            this.salesAmount +\n            this.freeTaxSalesAmount +\n            this.zeroTaxSalesAmount +\n            this.taxAmount;\n    }\n\n    toXMLObject() {\n        return {\n            SalesAmount: this.salesAmount,\n            FreeTaxSalesAmount: this.freeTaxSalesAmount,\n            ZeroTaxSalesAmount: this.zeroTaxSalesAmount,\n            TaxType: this.taxType,\n            TaxRate: this.taxRate,\n            TaxAmount: this.taxAmount,\n            TotalAmount: this.totalAmount\n        };\n    }\n}\n\nexport default Amount;\n","import xml2js from 'xml2js';\nimport TaxType from './tax-type';\nimport ReceiptInfo from './receipt-info';\nimport Item from './item';\nimport Amount from './amount';\n\nconst defaultInvoiceAttr = {\n    xmlns: 'urn:GEINV:eInvoiceMessage:C0401:3.1',\n    'xmlns:xsi': 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation': 'urn:GEINV:eInvoiceMessage:C0401:3.1 C0401.xsd'\n};\n\nclass Receipt {\n    constructor(info, items) {\n        if (!(info instanceof ReceiptInfo)) {\n            throw new TypeError('Info is not ReceiptInfo class!');\n        }\n        const invalidItems = items.filter(item => {\n            return !(item instanceof Item);\n        });\n        if (invalidItems.length > 0) {\n            throw new TypeError('Some items are not Item class!');\n        }\n\n        this.info = info;\n        this.items = items;\n        this.amount = new Amount(\n            this.taxItems,\n            this.freeTaxItems,\n            this.zeroTaxItems\n        );\n    }\n\n    // The format of the list of winners:\n    // 53925591  10510LC60123189...\n    // 53925591  10510LC60122037...\n    // The range of receipt number is the 15th position and 10 characters\n    static parseWinnersList(winnersList) {\n        return winnersList.split(/\\n|\\r\\n?/).map(winner => {\n            return winner.substr(15, 10);\n        });\n    }\n\n    // https://asana-user-private-us-east-1.s3.amazonaws.com/assets/1470352313817/469050158764958/0d7d7e6067a5c9d773b7578f68c1e6b6?AWSAccessKeyId=ASIAJYTZ4QJBKU575X7A&Expires=1512619611&Signature=S88aqo8KUTsZIarz6IU0N1Q9x3g%3D&x-amz-security-token=FQoDYXdzEIX%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaDH6gsGTBYtjGkHdQOiK3A9VasWE04WPY29Z46M12cLuySvyX3MqoiAwQe4T4sSxH%2BCDfLhKhTz2N7MEgkCINQ1JHV5ib0TQ3tWfNpffOnKQquhS9vBnYceVgU%2FoMEU8ASPvWyRC%2FBbPzDiNdxbgGB1TqroJuWKb6iZT%2FmfX3TDwAls5%2BKmPA5PtJYr9A6KjV18PdIDiz6X%2FIET2yn%2FZMyjbzEqvLN3HCJWfgQLCBWxT6C3yk%2FBXWynBVQhwgZPhUtzL57hfaW77mkK3iMdFIqFciLmp3suOh8F2D4KCLu2lXJ69W2W57wZtWHr2qzkC9pFG3tMXBzL3tvys%2FN1LIKH7R8RHvB6ugeYfqnyMBLIbWKhpJYUiaXcTennivjYVkUAIGXPsIBYssu8tF0%2BKs0baWnwxwLLfY19HpFG%2FfA8IdH6WUZLTkqfT8DJ%2B29I6Pl0J3NE1Mm7cB6G2Dk%2BJ5%2Bdh7rIlYhGlXNTHjSxJjt%2FmrCXLPnQgfxazk%2Fxp6LFUchdgVANLVLuI1CYy4V%2BKDWXEHXoVGExsr2Oby61ws6nyhk9S9GLE6uxu5wE%2F3xVcQEqUBZ5ad6sJwnDdwXOMFA2Yja1Hao2co6eei0QU%3D#_=_\n    toXML() {\n        let receiptObject = {\n            $: defaultInvoiceAttr,\n            Main: this.info.toXMLObject(),\n            Details: this.items.map(item => {\n                return item.toXMLObject();\n            }),\n            Amounts: this.amount.toXMLObject()\n        };\n\n        const builder = new xml2js.Builder({\n            rootName: 'Invoice'\n        });\n        return builder.buildObject(receiptObject);\n    }\n\n    isWinning(winningNumbers) {\n        return winningNumbers.indexOf(this.info.number) !== -1;\n    }\n\n    getChineseYear() {\n        return this.info.date.getFullYear() - 1911;\n    }\n\n    getWinningMonths() {\n        let month = this.info.date.getMonth() + 1;\n        return month % 2 === 0 ? [month - 1, month] : [month, month + 1];\n    }\n\n    generateBarCodeString() {\n        return (\n            this.getChineseYear().toString() +\n            this.getMonthsInterval()[1] +\n            this.getWinningMonths()[1] +\n            this.info.number +\n            this.info.randomNumber\n        );\n    }\n\n    get taxItems() {\n        return this.items.filter(item => {\n            return item.taxType === TaxType.TAX;\n        });\n    }\n\n    get freeTaxItems() {\n        return this.items.filter(item => {\n            return item.taxType === TaxType.FREE_TAX;\n        });\n    }\n\n    get zeroTaxItems() {\n        return this.items.filter(item => {\n            return item.taxType === TaxType.ZERO_TAX;\n        });\n    }\n}\n\nexport default {\n    Receipt: Receipt,\n    ReceiptInfo: ReceiptInfo,\n    Item: Item,\n    Amount: Amount,\n    TaxType: TaxType\n};\n"],"names":["ReceiptInfo","number","date","seller","buyer","type","carrier","donationID","orderno","id","randomNumber","Math","floor","random","xmlObject","format","name","DonateMark","NPOBAN","CarrierType","CarrierId1","CarrierId2","Item","description","unitPrice","sequenceNumber","quantity","taxType","parseInt","TaxType","TAX","amount","Amount","taxItems","freeTaxItems","zeroTaxItems","taxRate","salesAmount","round","reduce","item","freeTaxSalesAmount","zeroTaxSalesAmount","hasTax","hasFreeTax","hasZeroTax","SPECIAL_TAX","COMPOUND_TAX","FREE_TAX","ZERO_TAX","taxAmount","totalAmount","defaultInvoiceAttr","Receipt","info","items","TypeError","invalidItems","filter","length","receiptObject","toXMLObject","map","builder","xml2js","Builder","buildObject","winningNumbers","indexOf","getFullYear","month","getMonth","getChineseYear","toString","getMonthsInterval","getWinningMonths","winnersList","split","winner","substr"],"mappings":";;;;;;;;;;;;;AAAA,cAAe;SACN,CADM;cAED,CAFC;cAGD,CAHC;iBAIE,CAJF;kBAKG;CALlB;;;;;;;;;;;;;;;;;;;;;;;;;;ICEMA;yBAEEC,MADJ,EAEIC,IAFJ,EAGIC,MAHJ,EAIIC,KAJJ,EAKIC,IALJ,EAMIC,OANJ,EAOIC,UAPJ,EAQIC,OARJ,EASE;;;aACOP,MAAL,GAAcA,MAAd;aACKC,IAAL,GAAYA,IAAZ;aACKC,MAAL,GAAcA,MAAd;aACKC,KAAL,GAAaA,KAAb;aACKA,KAAL,CAAWK,EAAX,GAAgB,KAAKL,KAAL,CAAWK,EAAX,IAAiB,YAAjC;aACKJ,IAAL,GAAYA,QAAQ,IAApB;aACKC,OAAL,GAAeA,OAAf;aACKC,UAAL,GAAkBA,UAAlB;aACKG,YAAL,GAAoBC,KAAKC,KAAL,CAAW,OAAOD,KAAKE,MAAL,KAAgB,IAAlC,CAApB;aACKL,OAAL,GAAeA,OAAf;;;;;sCAGU;gBACNM,YAAY;+BACG,KAAKb,MADR;6BAECc,WAAO,KAAKb,IAAZ,EAAkB,UAAlB,CAFD;6BAGCa,WAAO,KAAKb,IAAZ,EAAkB,UAAlB,CAHD;wBAIJ;gCACQ,KAAKC,MAAL,CAAYM,EADpB;0BAEE,KAAKN,MAAL,CAAYa;iBANV;uBAQL;gCACS,KAAKZ,KAAL,CAAWK,EADpB;0BAEG,KAAKL,KAAL,CAAWY;iBAVT;6BAYC,KAAKX,IAZN;4BAaA,CAbA;2BAcD,KAAKC,OAAL,GAAe,GAAf,GAAqB,GAdpB;8BAeE,KAAKI;aAfvB;;gBAkBI,KAAKH,UAAT,EAAqB;0BACPU,UAAV,GAAuB,CAAvB;0BACUC,MAAV,GAAmB,KAAKX,UAAxB;;;gBAGA,KAAKD,OAAT,EAAkB;0BACJa,WAAV,GAAwB,KAAKb,OAAL,CAAaD,IAArC;0BACUe,UAAV,GAAuB,KAAKd,OAAL,CAAaG,EAApC;0BACUY,UAAV,GAAuB,KAAKf,OAAL,CAAaG,EAApC;;;mBAGGK,SAAP;;;;;;ICrDFQ;kBACUC,WAAZ,EAAyBC,SAAzB,EAAoCC,cAApC,EAAoDC,QAApD,EAA8DC,OAA9D,EAAuE;;;aAC9DJ,WAAL,GAAmBA,WAAnB;aACKC,SAAL,GAAiBI,SAASJ,SAAT,CAAjB;aACKC,cAAL,GAAsBA,cAAtB;aACKC,QAAL,GAAgBE,SAASF,QAAT,KAAsB,CAAtC;aACKC,OAAL,GAAeA,WAAWE,QAAQC,GAAlC;;;;;sCAGU;mBACH;6BACU;iCACI,KAAKP,WADT;8BAEC,KAAKG,QAFN;+BAGE,KAAKF,SAHP;4BAID,KAAKO,MAJJ;oCAKO,KAAKN;;aAN7B;;;;+BAWS;mBACF,KAAKD,SAAL,GAAiB,KAAKE,QAA7B;;;;;;ICtBFM;oBACUC,QAAZ,EAAsBC,YAAtB,EAAoCC,YAApC,EAAkD;;;YACxCC,UAAU,IAAhB;aACKC,WAAL,GAAmB1B,KAAK2B,KAAL,CACfL,SAASM,MAAT,CACI,UAACR,MAAD,EAASS,IAAT;mBAAkB,CAACT,SAASS,KAAKT,MAAf,KAA0B,IAAIK,OAA9B,CAAlB;SADJ,EAEI,CAFJ,CADe,CAAnB;aAMKK,kBAAL,GAA0B9B,KAAK2B,KAAL,CACtBJ,aAAaK,MAAb,CAAoB,UAACR,MAAD,EAASS,IAAT;mBAAkBT,SAASS,KAAKT,MAAhC;SAApB,EAA4D,CAA5D,CADsB,CAA1B;aAGKW,kBAAL,GAA0B/B,KAAK2B,KAAL,CACtBH,aAAaI,MAAb,CAAoB,UAACR,MAAD,EAASS,IAAT;mBAAkBT,SAASS,KAAKT,MAAhC;SAApB,EAA4D,CAA5D,CADsB,CAA1B;;YAIMY,SAAS,KAAKN,WAAL,KAAqB,CAApC;YACIO,aAAa,KAAKH,kBAAL,KAA4B,CAD7C;YAEII,aAAa,KAAKH,kBAAL,KAA4B,CAF7C;;aAIKf,OAAL,GAAeE,QAAQiB,WAAvB;YAEKH,UAAUC,UAAX,IACCD,UAAUE,UADX,IAECD,cAAcC,UAHnB,EAIE;iBACOlB,OAAL,GAAeE,QAAQkB,YAAvB;SALJ,MAMO,IAAIJ,MAAJ,EAAY;iBACVhB,OAAL,GAAeE,QAAQC,GAAvB;SADG,MAEA,IAAIc,UAAJ,EAAgB;iBACdjB,OAAL,GAAeE,QAAQmB,QAAvB;SADG,MAEA,IAAIH,UAAJ,EAAgB;iBACdlB,OAAL,GAAeE,QAAQoB,QAAvB;;aAECb,OAAL,GACI,KAAKT,OAAL,KAAiBE,QAAQmB,QAAzB,IACA,KAAKrB,OAAL,KAAiBE,QAAQoB,QADzB,GAEM,CAFN,GAGMb,OAJV;aAKKc,SAAL,GAAiBvC,KAAK2B,KAAL,CAAW,KAAKD,WAAL,GAAmB,KAAKD,OAAnC,CAAjB;aACKe,WAAL,GACI,KAAKd,WAAL,GACA,KAAKI,kBADL,GAEA,KAAKC,kBAFL,GAGA,KAAKQ,SAJT;;;;;sCAOU;mBACH;6BACU,KAAKb,WADf;oCAEiB,KAAKI,kBAFtB;oCAGiB,KAAKC,kBAHtB;yBAIM,KAAKf,OAJX;yBAKM,KAAKS,OALX;2BAMQ,KAAKc,SANb;6BAOU,KAAKC;aAPtB;;;;;;AC5CR,IAAMC,qBAAqB;WAChB,qCADgB;iBAEV,2CAFU;0BAGD;CAH1B;;IAMMC;qBACUC,IAAZ,EAAkBC,KAAlB,EAAyB;;;YACjB,EAAED,gBAAgBtD,WAAlB,CAAJ,EAAoC;kBAC1B,IAAIwD,SAAJ,CAAc,gCAAd,CAAN;;YAEEC,eAAeF,MAAMG,MAAN,CAAa,gBAAQ;mBAC/B,EAAElB,gBAAgBlB,IAAlB,CAAP;SADiB,CAArB;YAGImC,aAAaE,MAAb,GAAsB,CAA1B,EAA6B;kBACnB,IAAIH,SAAJ,CAAc,gCAAd,CAAN;;;aAGCF,IAAL,GAAYA,IAAZ;aACKC,KAAL,GAAaA,KAAb;aACKxB,MAAL,GAAc,IAAIC,MAAJ,CACV,KAAKC,QADK,EAEV,KAAKC,YAFK,EAGV,KAAKC,YAHK,CAAd;;;;;;;;;;;;;;gCAkBI;gBACAyB,gBAAgB;mBACbR,kBADa;sBAEV,KAAKE,IAAL,CAAUO,WAAV,EAFU;yBAGP,KAAKN,KAAL,CAAWO,GAAX,CAAe,gBAAQ;2BACrBtB,KAAKqB,WAAL,EAAP;iBADK,CAHO;yBAMP,KAAK9B,MAAL,CAAY8B,WAAZ;aANb;;gBASME,UAAU,IAAIC,OAAOC,OAAX,CAAmB;0BACrB;aADE,CAAhB;mBAGOF,QAAQG,WAAR,CAAoBN,aAApB,CAAP;;;;kCAGMO,gBAAgB;mBACfA,eAAeC,OAAf,CAAuB,KAAKd,IAAL,CAAUrD,MAAjC,MAA6C,CAAC,CAArD;;;;yCAGa;mBACN,KAAKqD,IAAL,CAAUpD,IAAV,CAAemE,WAAf,KAA+B,IAAtC;;;;2CAGe;gBACXC,QAAQ,KAAKhB,IAAL,CAAUpD,IAAV,CAAeqE,QAAf,KAA4B,CAAxC;mBACOD,QAAQ,CAAR,KAAc,CAAd,GAAkB,CAACA,QAAQ,CAAT,EAAYA,KAAZ,CAAlB,GAAuC,CAACA,KAAD,EAAQA,QAAQ,CAAhB,CAA9C;;;;gDAGoB;mBAEhB,KAAKE,cAAL,GAAsBC,QAAtB,KACA,KAAKC,iBAAL,GAAyB,CAAzB,CADA,GAEA,KAAKC,gBAAL,GAAwB,CAAxB,CAFA,GAGA,KAAKrB,IAAL,CAAUrD,MAHV,GAIA,KAAKqD,IAAL,CAAU5C,YALd;;;;+BASW;mBACJ,KAAK6C,KAAL,CAAWG,MAAX,CAAkB,gBAAQ;uBACtBlB,KAAKb,OAAL,KAAiBE,QAAQC,GAAhC;aADG,CAAP;;;;+BAKe;mBACR,KAAKyB,KAAL,CAAWG,MAAX,CAAkB,gBAAQ;uBACtBlB,KAAKb,OAAL,KAAiBE,QAAQmB,QAAhC;aADG,CAAP;;;;+BAKe;mBACR,KAAKO,KAAL,CAAWG,MAAX,CAAkB,gBAAQ;uBACtBlB,KAAKb,OAAL,KAAiBE,QAAQoB,QAAhC;aADG,CAAP;;;;yCA3DoB2B,aAAa;mBAC1BA,YAAYC,KAAZ,CAAkB,UAAlB,EAA8Bf,GAA9B,CAAkC,kBAAU;uBACxCgB,OAAOC,MAAP,CAAc,EAAd,EAAkB,EAAlB,CAAP;aADG,CAAP;;;;;;AAgER,cAAe;aACF1B,OADE;iBAEErD,WAFF;UAGLsB,IAHK;YAIHU,MAJG;aAKFH;CALb;;;;;;;;"}