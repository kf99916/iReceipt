{"version":3,"file":"ireceipt.min.js","sources":["../../src/js/tax-type.js","../../src/js/receipt-info.js","../../src/js/item.js","../../src/js/amount.js","../../src/js/common/utils.js","../../src/js/encode-type.js","../../src/js/aes.js","../../src/js/receipt.js"],"sourcesContent":["export default {\n    TAX: 1,\n    ZERO_TAX: 2,\n    FREE_TAX: 3,\n    SPECIAL_TAX: 4,\n    COMPOUND_TAX: 9\n};\n","import { format } from 'date-fns/esm';\n\nclass ReceiptInfo {\n    constructor(\n        number,\n        date,\n        seller,\n        buyer,\n        type = '07',\n        carrier,\n        donationID,\n        orderno\n    ) {\n        this.number = number;\n        this.date = date;\n        this.seller = seller;\n        this.buyer = buyer;\n        this.type = type;\n        this.carrier = carrier;\n        this.donationID = donationID;\n        this.orderno = orderno;\n        this.randomNumber = Math.floor(1000 + Math.random() * 9000);\n    }\n\n    toXMLObject() {\n        let xmlObject = {\n            InvoiceNumber: this.number,\n            InvoiceDate: format(this.date, 'YYYYMMDD'),\n            InvoiceTime: format(this.date, 'hh:mm:ss'),\n            Seller: {\n                Identifier: this.seller.id,\n                Name: this.seller.name\n            },\n            Buyer: {\n                Identifier: this.buyer.id || '0000000000',\n                Name: this.buyer.name\n            },\n            InvoiceType: this.type,\n            DonateMark: 0,\n            PrintMark: this.carrier ? 'N' : 'Y',\n            RandomNumber: this.randomNumber\n        };\n\n        if (this.donationID) {\n            xmlObject.DonateMark = 1;\n            xmlObject.NPOBAN = this.donationID;\n        }\n\n        if (this.carrier) {\n            xmlObject.CarrierType = this.carrier.type;\n            xmlObject.CarrierId1 = this.carrier.id;\n            xmlObject.CarrierId2 = this.carrier.id;\n        }\n\n        return xmlObject;\n    }\n}\n\nexport default ReceiptInfo;\n","import TaxType from './tax-type';\n\nclass Item {\n    constructor(\n        description,\n        unitPrice,\n        sequenceNumber,\n        quantity = 1,\n        taxType = TaxType.TAX\n    ) {\n        this.description = description;\n        this.unitPrice = parseInt(unitPrice);\n        this.sequenceNumber = sequenceNumber;\n        this.quantity = parseInt(quantity);\n        this.taxType = taxType;\n    }\n\n    toXMLObject() {\n        return {\n            ProductItem: {\n                Description: this.description,\n                Quantity: this.quantity,\n                UnitPrice: this.unitPrice,\n                Amount: this.amount,\n                SequenceNumber: this.sequenceNumber\n            }\n        };\n    }\n\n    get amount() {\n        return this.unitPrice * this.quantity;\n    }\n}\n\nexport default Item;\n","import TaxType from './tax-type';\n\nclass Amount {\n    constructor(taxItems, freeTaxItems, zeroTaxItems) {\n        const taxRate = 0.05;\n        this.salesAmount = Math.round(\n            taxItems.reduce(\n                (amount, item) => (amount + item.amount) / (1 + taxRate),\n                0\n            )\n        );\n        this.freeTaxSalesAmount = Math.round(\n            freeTaxItems.reduce((amount, item) => amount + item.amount, 0)\n        );\n        this.zeroTaxSalesAmount = Math.round(\n            zeroTaxItems.reduce((amount, item) => amount + item.amount, 0)\n        );\n\n        const hasTax = this.salesAmount !== 0,\n            hasFreeTax = this.freeTaxSalesAmount !== 0,\n            hasZeroTax = this.zeroTaxSalesAmount !== 0;\n\n        this.taxType = TaxType.SPECIAL_TAX;\n        if (\n            (hasTax && hasFreeTax) ||\n            (hasTax && hasZeroTax) ||\n            (hasFreeTax && hasZeroTax)\n        ) {\n            this.taxType = TaxType.COMPOUND_TAX;\n        } else if (hasTax) {\n            this.taxType = TaxType.TAX;\n        } else if (hasFreeTax) {\n            this.taxType = TaxType.FREE_TAX;\n        } else if (hasZeroTax) {\n            this.taxType = TaxType.ZERO_TAX;\n        }\n        this.taxRate =\n            this.taxType === TaxType.FREE_TAX ||\n            this.taxType === TaxType.ZERO_TAX\n                ? 0\n                : taxRate;\n        this.taxAmount = Math.round(this.salesAmount * this.taxRate);\n        this.totalAmount =\n            this.salesAmount +\n            this.freeTaxSalesAmount +\n            this.zeroTaxSalesAmount +\n            this.taxAmount;\n    }\n\n    toXMLObject() {\n        return {\n            SalesAmount: this.salesAmount,\n            FreeTaxSalesAmount: this.freeTaxSalesAmount,\n            ZeroTaxSalesAmount: this.zeroTaxSalesAmount,\n            TaxType: this.taxType,\n            TaxRate: this.taxRate,\n            TaxAmount: this.taxAmount,\n            TotalAmount: this.totalAmount\n        };\n    }\n}\n\nexport default Amount;\n","export default {\n    padZero: function(number, size) {\n        return ('000000000' + number).substr(-size);\n    },\n    repeat: function(string, times) {\n        let repeatedString = '';\n        while (times > 0) {\n            repeatedString += string;\n            times--;\n        }\n        return repeatedString;\n    }\n};\n","export default {\n    BIG5: 0,\n    UTF8: 1,\n    BASE64: 3\n};\n","import aesjs from 'aes-js';\n\nexport default {\n    encrypt: function(AESKey, plainText) {\n        if (!AESKey) {\n            throw new TypeError('AES Key is not found!');\n        }\n        const textBytes = aesjs.utils.utf8.toBytes(plainText),\n            aesCtr = new aesjs.ModeOfOperation.ctr(\n                AESKey,\n                new aesjs.Counter(5)\n            );\n\n        return aesCtr.encrypt(textBytes);\n    },\n    decrypt: function(AESKey, encryptedBytes) {\n        if (!AESKey) {\n            throw new TypeError('AES Key is not found');\n        }\n        const aesCtr = new aesjs.ModeOfOperation.ctr(\n                AESKey,\n                new aesjs.Counter(5)\n            ),\n            decryptedBytes = aesCtr.decrypt(encryptedBytes);\n\n        return aesjs.utils.utf8.fromBytes(decryptedBytes);\n    }\n};\n","import xml2js from 'xml2js';\nimport TaxType from './tax-type';\nimport ReceiptInfo from './receipt-info';\nimport Item from './item';\nimport Amount from './amount';\nimport utils from './common/utils';\nimport EncodeType from './encode-type';\nimport aes from './aes';\n\nconst defaultInvoiceAttr = {\n    xmlns: 'urn:GEINV:eInvoiceMessage:C0401:3.1',\n    'xmlns:xsi': 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation': 'urn:GEINV:eInvoiceMessage:C0401:3.1 C0401.xsd'\n};\n\nclass Receipt {\n    constructor(info, items) {\n        if (!(info instanceof ReceiptInfo)) {\n            throw new TypeError('Info is not ReceiptInfo class!');\n        }\n        const invalidItems = items.filter(item => {\n            return !(item instanceof Item);\n        });\n        if (invalidItems.length > 0) {\n            throw new TypeError('Some items are not Item class!');\n        }\n\n        this.info = info;\n        this.items = items;\n        this.amount = new Amount(\n            this.taxItems,\n            this.freeTaxItems,\n            this.zeroTaxItems\n        );\n    }\n\n    // Static Methods\n    // The format of the list of winners:\n    // 53925591  10510LC60123189...\n    // 53925591  10510LC60122037...\n    // The range of receipt number is the 15th position and 10 characters\n    static parseWinnersList(winnersList) {\n        return winnersList.split(/\\n|\\r\\n?/).map(winner => {\n            return winner.substr(15, 10);\n        });\n    }\n\n    // Getters\n    get taxItems() {\n        return this.items.filter(item => {\n            return item.taxType === TaxType.TAX;\n        });\n    }\n\n    get freeTaxItems() {\n        return this.items.filter(item => {\n            return item.taxType === TaxType.FREE_TAX;\n        });\n    }\n\n    get zeroTaxItems() {\n        return this.items.filter(item => {\n            return item.taxType === TaxType.ZERO_TAX;\n        });\n    }\n\n    get chineseYear() {\n        return this.info.date.getFullYear() - 1911;\n    }\n\n    get winningMonths() {\n        let month = this.info.date.getMonth() + 1;\n        return month % 2 === 0 ? [month - 1, month] : [month, month + 1];\n    }\n\n    get totalQuantity() {\n        return this.items.reduce((sum, item) => {\n            return sum + item.quantity;\n        }, 0);\n    }\n\n    // Methods\n    // Reference: https://www.einvoice.nat.gov.tw/home/DownLoad?fileName=1447235507091_0.zip\n    toXML() {\n        let receiptObject = {\n            $: defaultInvoiceAttr,\n            Main: this.info.toXMLObject(),\n            Details: this.items.map(item => {\n                return item.toXMLObject();\n            }),\n            Amounts: this.amount.toXMLObject()\n        };\n\n        const builder = new xml2js.Builder({\n            rootName: 'Invoice'\n        });\n        return builder.buildObject(receiptObject);\n    }\n\n    isWinning(winningNumbers) {\n        return winningNumbers.indexOf(this.info.number) !== -1;\n    }\n\n    // Reference: https://www.einvoice.nat.gov.tw/home/DownLoad?fileName=1479449792874_0.6(20161115).pdf\n    generateBarCodeString() {\n        return (\n            this.chineseYear +\n            utils.padZero(this.winningMonths[1], 2) +\n            this.info.number +\n            this.info.randomNumber\n        );\n    }\n\n    // Reference: https://www.einvoice.nat.gov.tw/home/DownLoad?fileName=1479449792874_0.6(20161115).pdf\n    generateRightQRCodeString() {\n        let qrcode = this.items.map((item, index) => {\n            let combineString = [];\n            combineString.push(index === 0 ? '**' : ':');\n            combineString.push(item.description.replace(':', '-'));\n            combineString.push(':' + item.quantity);\n            combineString.push(':' + item.unitPrice);\n            return combineString.join('');\n        });\n\n        return qrcode.join('');\n    }\n\n    generateLeftQRCodeString(\n        AESKey,\n        info = utils.repeat('*', 10),\n        encodeType = EncodeType.UTF8\n    ) {\n        if (!AESKey) {\n            throw new TypeError('AES Key is not found');\n        }\n\n        let qrcode = [],\n            dateString =\n                this.chineseYear +\n                utils.padZero(this.info.date.getMonth() + 1, 2) +\n                utils.padZero(this.info.date.getDate(), 2),\n            salesAmountHex16 = utils.padZero(\n                this.amount.salesAmount.toString(16).toUpperCase(),\n                8\n            ),\n            totalAmountHex16 = utils.padZero(\n                this.amount.totalAmount.toString(16).toUpperCase(),\n                8\n            ),\n            plainText = this.info.number + this.info.randomNumber,\n            padding = 16 - plainText.length % 16;\n\n        plainText += utils.repeat(padding, padding);\n\n        const encryptText = Buffer.from(\n            aes.encrypt(AESKey, plainText)\n        ).toString('base64');\n\n        qrcode.push(this.info.number);\n        qrcode.push(dateString);\n        qrcode.push(this.info.randomNumber);\n        qrcode.push(salesAmountHex16);\n        qrcode.push(totalAmountHex16);\n        qrcode.push(this.info.buyer.id || utils.repeat('0', 8));\n        qrcode.push(this.info.seller.id);\n        qrcode.push(encryptText);\n        qrcode.push(':' + info);\n        qrcode.push(':' + this.items.length);\n        qrcode.push(':' + this.totalQuantity);\n        qrcode.push(':' + encodeType);\n\n        return qrcode.join('');\n    }\n}\n\nexport default {\n    Receipt: Receipt,\n    ReceiptInfo: ReceiptInfo,\n    Item: Item,\n    Amount: Amount,\n    TaxType: TaxType,\n    EncodeType: EncodeType\n};\n"],"names":["TAX","ZERO_TAX","FREE_TAX","SPECIAL_TAX","COMPOUND_TAX","constructor","number","date","seller","buyer","type","carrier","donationID","orderno","randomNumber","Math","floor","random","toXMLObject","InvoiceNumber","InvoiceDate","format","InvoiceTime","Seller","Identifier","id","Name","name","Buyer","InvoiceType","DonateMark","PrintMark","RandomNumber","NPOBAN","CarrierType","CarrierId1","CarrierId2","description","unitPrice","parseInt","sequenceNumber","quantity","taxType","ProductItem","Description","Quantity","UnitPrice","Amount","amount","SequenceNumber","round","salesAmount","reduce","freeTaxSalesAmount","zeroTaxSalesAmount","taxRate","taxAmount","totalAmount","SalesAmount","FreeTaxSalesAmount","ZeroTaxSalesAmount","TaxType","TaxRate","TaxAmount","TotalAmount","padZero","substr","repeat","BIG5","UTF8","BASE64","encrypt","TypeError","utils","utf8","toBytes","ModeOfOperation","ctr","Counter","decrypt","fromBytes","xmlns","filter","length","info","items","taxItems","freeTaxItems","zeroTaxItems","parseWinnersList","split","map","chineseYear","getFullYear","winningMonths","getMonth","totalQuantity","toXML","$","Main","Details","Amounts","Builder","rootName","buildObject","isWinning","indexOf","generateBarCodeString","generateRightQRCodeString","replace","join","generateLeftQRCodeString","getDate","toString","toUpperCase","Buffer","from","push","Receipt","ReceiptInfo","Item","EncodeType"],"mappings":"8YAAA,MAAe,CACXA,IAAK,CADM,CAEXC,SAAU,CAFC,CAGXC,SAAU,CAHC,CAIXC,YAAa,CAJF,CAKXC,aAAc,CALH,CAAf,CCEA,OAAkB,CACdC,oBAKI,EAAO,IALX,OASE,CACE,KAAKC,MAAL,EADF,CAEE,KAAKC,IAAL,EAFF,CAGE,KAAKC,MAAL,EAHF,CAIE,KAAKC,KAAL,EAJF,CAKE,KAAKC,IAAL,EALF,CAME,KAAKC,OAAL,EANF,CAOE,KAAKC,UAAL,EAPF,CAQE,KAAKC,OAAL,EARF,CASE,KAAKC,YAAL,CAAoBC,KAAKC,KAAL,CAAW,IAAO,SAAKC,MAAL,EAAlB,CACvB,CAEDC,aAAc,CACV,GAAI,GAAY,CACZC,cAAe,KAAKb,MADR,CAEZc,YAAaC,QAAAA,CAAO,KAAKd,IAAZc,CAAkB,UAAlBA,CAFD,CAGZC,YAAaD,QAAAA,CAAO,KAAKd,IAAZc,CAAkB,UAAlBA,CAHD,CAIZE,OAAQ,CACJC,WAAY,KAAKhB,MAAL,CAAYiB,EADpB,CAEJC,KAAM,KAAKlB,MAAL,CAAYmB,IAFd,CAJI,CAQZC,MAAO,CACHJ,WAAY,KAAKf,KAAL,CAAWgB,EAAX,EAAiB,YAD1B,CAEHC,KAAM,KAAKjB,KAAL,CAAWkB,IAFd,CARK,CAYZE,YAAa,KAAKnB,IAZN,CAaZoB,WAAY,CAbA,CAcZC,UAAW,KAAKpB,OAAL,CAAe,GAAf,CAAqB,GAdpB,CAeZqB,aAAc,KAAKlB,YAfP,CAAhB,CA6BA,MAXI,MAAKF,UAWT,GAVI,EAAUkB,UAAV,CAAuB,CAU3B,CATI,EAAUG,MAAV,CAAmB,KAAKrB,UAS5B,EANI,KAAKD,OAMT,GALI,EAAUuB,WAAV,CAAwB,KAAKvB,OAAL,CAAaD,IAKzC,CAJI,EAAUyB,UAAV,CAAuB,KAAKxB,OAAL,CAAac,EAIxC,CAHI,EAAUW,UAAV,CAAuB,KAAKzB,OAAL,CAAac,EAGxC,GACH,CArDa,CCAlB,OAAW,CACPpB,kBAII,EAAW,CAJf,CAKI,EAAU,EAAQL,GALtB,CAME,CACE,KAAKqC,WAAL,EADF,CAEE,KAAKC,SAAL,CAAiBC,WAFnB,CAGE,KAAKC,cAAL,EAHF,CAIE,KAAKC,QAAL,CAAgBF,WAJlB,CAKE,KAAKG,OAAL,EACH,CAEDxB,aAAc,CACV,MAAO,CACHyB,YAAa,CACTC,YAAa,KAAKP,WADT,CAETQ,SAAU,KAAKJ,QAFN,CAGTK,UAAW,KAAKR,SAHP,CAITS,OAAQ,KAAKC,MAJJ,CAKTC,eAAgB,KAAKT,cALZ,CADV,CASV,CAED,GAAIQ,OAAJ,EAAa,CACT,MAAO,MAAKV,SAAL,CAAiB,KAAKG,QAChC,CA7BM,CCAX,OAAa,CACTpC,kBAAkD,OAE3BU,KAAKmC,KAFsB,CAC9C,KAAM,GAAU,IAAhB,CACA,KAAKC,WAAL,CAAmB,EACf,EAASC,MAAT,CACI,OAAkB,CAAC,EAAS,EAAKJ,MAAf,GAA0B,GAA1B,CADtB,CAEI,CAFJ,CADe,CAF2B,CAQ9C,KAAKK,kBAAL,CAA0B,EACtB,EAAaD,MAAb,CAAoB,OAAkB,EAAS,EAAKJ,MAApD,CAA4D,CAA5D,CADsB,CARoB,CAW9C,KAAKM,kBAAL,CAA0B,EACtB,EAAaF,MAAb,CAAoB,OAAkB,EAAS,EAAKJ,MAApD,CAA4D,CAA5D,CADsB,CAXoB,CAe9C,KAAM,GAA8B,CAArB,QAAKG,WAApB,CACI,EAAyC,CAA5B,QAAKE,kBADtB,CAEI,EAAyC,CAA5B,QAAKC,kBAFtB,CAIA,KAAKZ,OAAL,CAAe,EAAQvC,WAnBuB,CAqBzC,IAAD,EACC,IADD,EAEC,IAvByC,CAyB1C,KAAKuC,OAAL,CAAe,EAAQtC,YAzBmB,GA2B1C,KAAKsC,OAAL,CAAe,EAAQ1C,GA3BmB,GA6B1C,KAAK0C,OAAL,CAAe,EAAQxC,QA7BmB,KA+B1C,KAAKwC,OAAL,CAAe,EAAQzC,QA/BmB,EAiC9C,KAAKsD,OAAL,CACI,KAAKb,OAAL,GAAiB,EAAQxC,QAAzB,EACA,KAAKwC,OAAL,GAAiB,EAAQzC,QADzB,CAEM,CAFN,EAlC0C,CAsC9C,KAAKuD,SAAL,CAAiB,EAAW,KAAKL,WAAL,CAAmB,KAAKI,OAAnC,CAtC6B,CAuC9C,KAAKE,WAAL,CACI,KAAKN,WAAL,CACA,KAAKE,kBADL,CAEA,KAAKC,kBAFL,CAGA,KAAKE,SACZ,CAEDtC,aAAc,CACV,MAAO,CACHwC,YAAa,KAAKP,WADf,CAEHQ,mBAAoB,KAAKN,kBAFtB,CAGHO,mBAAoB,KAAKN,kBAHtB,CAIHO,QAAS,KAAKnB,OAJX,CAKHoB,QAAS,KAAKP,OALX,CAMHQ,UAAW,KAAKP,SANb,CAOHQ,YAAa,KAAKP,WAPf,CASV,CAzDQ,CCFb,MAAe,CACXQ,QAAS,aAAuB,CAC5B,MAAO,CAAC,aAAD,EAAuBC,MAAvB,CAA8B,EAA9B,CACV,CAHU,CAIXC,OAAQ,aAAwB,CAC5B,GAAI,GAAiB,EAArB,CAD4B,KAEb,CAAR,EAFqB,EAGxB,IAHwB,CAIxB,GAJwB,CAM5B,QACH,CAXU,CAAf,GCAe,CACXC,KAAM,CADK,CAEXC,KAAM,CAFK,CAGXC,OAAQ,CAHG,CDAf,GEEe,CACXC,QAAS,aAA4B,CACjC,GAAI,EAAJ,CACI,KAAM,IAAIC,UAAJ,CAAc,uBAAd,CAAN,CAEJ,KAAM,GAAY,EAAMC,KAAN,CAAYC,IAAZ,CAAiBC,OAAjB,GAAlB,CACI,EAAS,GAAI,GAAMC,eAAN,CAAsBC,GAA1B,GAEL,GAAI,GAAMC,OAAV,CAAkB,CAAlB,CAFK,CADb,CAMA,MAAO,GAAOP,OAAP,GACV,CAZU,CAaXQ,QAAS,aAAiC,CACtC,GAAI,EAAJ,CACI,KAAM,IAAIP,UAAJ,CAAc,sBAAd,CAAN,CAEJ,KAAM,GAAS,GAAI,GAAMI,eAAN,CAAsBC,GAA1B,GAEP,GAAI,GAAMC,OAAV,CAAkB,CAAlB,CAFO,CAAf,CAII,EAAiB,EAAOC,OAAP,GAJrB,CAMA,MAAO,GAAMN,KAAN,CAAYC,IAAZ,CAAiBM,SAAjB,GACV,CAxBU,CFFf,CGSA,KAAM,GAAqB,CACvBC,MAAO,qCADgB,CAEvB,YAAa,2CAFU,CAGvB,qBAAsB,+CAHC,CAA3B,CAMA,OAAc,CACV5E,gBAAyB,CACrB,GAAI,EAAE,cAAF,CAAJ,CACI,KAAM,IAAImE,UAAJ,CAAc,gCAAd,CAAN,CAEJ,KAAM,GAAe,EAAMU,MAAN,CAAa,KACvB,EAAE,cAAF,CADU,CAArB,CAGA,GAA0B,CAAtB,GAAaC,MAAjB,CACI,KAAM,IAAIX,UAAJ,CAAc,gCAAd,CAAN,CAGJ,KAAKY,IAAL,EAXqB,CAYrB,KAAKC,KAAL,EAZqB,CAarB,KAAKrC,MAAL,CAAc,MACV,KAAKsC,QADK,CAEV,KAAKC,YAFK,CAGV,KAAKC,YAHK,CAKjB;;;;;AAOD,MAAOC,iBAAP,GAAqC,CACjC,MAAO,GAAYC,KAAZ,CAAkB,UAAlB,EAA8BC,GAA9B,CAAkC,KAC9B,EAAOzB,MAAP,CAAc,EAAd,CAAkB,EAAlB,CADJ,CAGV;AAGD,GAAIoB,SAAJ,EAAe,CACX,MAAO,MAAKD,KAAL,CAAWH,MAAX,CAAkB,KACd,EAAKxC,OAAL,GAAiB,EAAQ1C,GAD7B,CAGV,CAED,GAAIuF,aAAJ,EAAmB,CACf,MAAO,MAAKF,KAAL,CAAWH,MAAX,CAAkB,KACd,EAAKxC,OAAL,GAAiB,EAAQxC,QAD7B,CAGV,CAED,GAAIsF,aAAJ,EAAmB,CACf,MAAO,MAAKH,KAAL,CAAWH,MAAX,CAAkB,KACd,EAAKxC,OAAL,GAAiB,EAAQzC,QAD7B,CAGV,CAED,GAAI2F,YAAJ,EAAkB,CACd,MAAO,MAAKR,IAAL,CAAU7E,IAAV,CAAesF,WAAf,GAA+B,IACzC,CAED,GAAIC,cAAJ,EAAoB,CAChB,GAAI,GAAQ,KAAKV,IAAL,CAAU7E,IAAV,CAAewF,QAAf,GAA4B,CAAxC,CACA,MAAqB,EAAd,IAAQ,CAAR,CAAkB,CAAC,EAAQ,CAAT,GAAlB,CAAuC,GAAQ,EAAQ,CAAhB,CACjD,CAED,GAAIC,cAAJ,EAAoB,CAChB,MAAO,MAAKX,KAAL,CAAWjC,MAAX,CAAkB,OACd,EAAM,EAAKX,QADf,CAEJ,CAFI,CAGV;;AAIDwD,OAAQ,CACJ,GAAI,GAAgB,CAChBC,GADgB,CAEhBC,KAAM,KAAKf,IAAL,CAAUlE,WAAV,EAFU,CAGhBkF,QAAS,KAAKf,KAAL,CAAWM,GAAX,CAAe,KACb,EAAKzE,WAAL,EADF,CAHO,CAMhBmF,QAAS,KAAKrD,MAAL,CAAY9B,WAAZ,EANO,CAApB,CASA,KAAM,GAAU,GAAI,GAAOoF,OAAX,CAAmB,CAC/BC,SAAU,SADqB,CAAnB,CAAhB,CAGA,MAAO,GAAQC,WAAR,GACV,CAEDC,YAA0B,CACtB,MAAoD,CAAC,CAA9C,KAAeC,OAAf,CAAuB,KAAKtB,IAAL,CAAU9E,MAAjC,CACV;AAGDqG,uBAAwB,CACpB,MACI,MAAKf,WAAL,CACA,EAAM3B,OAAN,CAAc,KAAK6B,aAAL,CAAmB,CAAnB,CAAd,CAAqC,CAArC,CADA,CAEA,KAAKV,IAAL,CAAU9E,MAFV,CAGA,KAAK8E,IAAL,CAAUtE,YAEjB;AAGD8F,2BAA4B,CACxB,GAAI,GAAS,KAAKvB,KAAL,CAAWM,GAAX,CAAe,OAAiB,CACzC,GAAI,GAAgB,CACS,CAAV,KAAc,IAAd,CAAqB,GADpB,CAED,EAAKtD,WAAL,CAAiBwE,OAAjB,CAAyB,GAAzB,CAA8B,GAA9B,CAFC,CAGD,IAAM,EAAKpE,QAHV,CAID,IAAM,EAAKH,SAJV,CAApB,CAKA,MAAO,GAAcwE,IAAd,CAAmB,EAAnB,CACV,CAPY,CAAb,CASA,MAAO,GAAOA,IAAP,CAAY,EAAZ,CACV,CAEDC,2BAEI,EAAO,EAAM5C,MAAN,CAAa,GAAb,CAAkB,EAAlB,CAFX,CAGI,EAAa,EAAWE,IAH5B,CAIE,CACE,GAAI,EAAJ,CACI,KAAM,IAAIG,UAAJ,CAAc,sBAAd,CAAN,CAGJ,GAAI,KAAJ,CACI,EACI,KAAKoB,WAAL,CACA,EAAM3B,OAAN,CAAc,KAAKmB,IAAL,CAAU7E,IAAV,CAAewF,QAAf,GAA4B,CAA1C,CAA6C,CAA7C,CADA,CAEA,EAAM9B,OAAN,CAAc,KAAKmB,IAAL,CAAU7E,IAAV,CAAeyG,OAAf,EAAd,CAAwC,CAAxC,CAJR,CAKI,EAAmB,EAAM/C,OAAN,CACf,KAAKjB,MAAL,CAAYG,WAAZ,CAAwB8D,QAAxB,CAAiC,EAAjC,EAAqCC,WAArC,EADe,CAEf,CAFe,CALvB,CASI,EAAmB,EAAMjD,OAAN,CACf,KAAKjB,MAAL,CAAYS,WAAZ,CAAwBwD,QAAxB,CAAiC,EAAjC,EAAqCC,WAArC,EADe,CAEf,CAFe,CATvB,CAaI,EAAY,KAAK9B,IAAL,CAAU9E,MAAV,CAAmB,KAAK8E,IAAL,CAAUtE,YAb7C,CAcI,EAAU,GAAK,EAAUqE,MAAV,CAAmB,EAdtC,CAgBA,GAAa,EAAMhB,MAAN,KArBf,CAuBE,KAAM,GAAcgD,OAAOC,IAAP,CAChB,EAAI7C,OAAJ,KADgB,EAElB0C,QAFkB,CAET,QAFS,CAApB,CAiBA,MAbA,GAAOI,IAAP,CAAY,KAAKjC,IAAL,CAAU9E,MAAtB,CAaA,CAZA,EAAO+G,IAAP,GAYA,CAXA,EAAOA,IAAP,CAAY,KAAKjC,IAAL,CAAUtE,YAAtB,CAWA,CAVA,EAAOuG,IAAP,GAUA,CATA,EAAOA,IAAP,GASA,CARA,EAAOA,IAAP,CAAY,KAAKjC,IAAL,CAAU3E,KAAV,CAAgBgB,EAAhB,EAAsB,EAAM0C,MAAN,CAAa,GAAb,CAAkB,CAAlB,CAAlC,CAQA,CAPA,EAAOkD,IAAP,CAAY,KAAKjC,IAAL,CAAU5E,MAAV,CAAiBiB,EAA7B,CAOA,CANA,EAAO4F,IAAP,GAMA,CALA,EAAOA,IAAP,CAAY,KAAZ,CAKA,CAJA,EAAOA,IAAP,CAAY,IAAM,KAAKhC,KAAL,CAAWF,MAA7B,CAIA,CAHA,EAAOkC,IAAP,CAAY,IAAM,KAAKrB,aAAvB,CAGA,CAFA,EAAOqB,IAAP,CAAY,KAAZ,CAEA,CAAO,EAAOP,IAAP,CAAY,EAAZ,CACV,CA7JS,OAgKC,CACXQ,SADW,CAEXC,aAFW,CAGXC,MAHW,CAIXzE,QAJW,CAKXc,SALW,CAMX4D,YANW"}